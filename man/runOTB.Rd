% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parseOTB.R
\name{runOTB}
\alias{runOTB}
\title{Execute the OTB command list via system call}
\usage{
runOTB(otbCmdList = NULL, gili = NULL, retRaster = TRUE, quiet = TRUE)
}
\arguments{
\item{otbCmdList}{the OTB algorithm parameter list}

\item{gili}{optional gis linkage as done by `linkOTB()`}

\item{retRaster}{boolean if TRUE a raster stack is returned}

\item{quiet}{boolean  switch for supressing messages default is TRUE}
}
\description{
Wrapper function which paste the OTB command list into a system call compatible string and execute this command.
}
\examples{
\dontrun{
## link to OTB
otblink<-link2GI::linkOTB()

## get data
setwd(tempdir())
## get some typical data as provided by the authority
url<-'http://www.ldbv.bayern.de/file/zip/5619/DOP%2040_CIR.zip'
res <- curl::curl_download(url, "testdata.zip")
unzip(res,junkpaths = TRUE,overwrite = TRUE)

## for the example we use the edge detection, 
algoKeyword<- "EdgeExtraction"

## extract the command list for the choosen algorithm 
cmd<-parseOTBFunction(algo = algoKeyword, gili = otblink)


## define the mandantory arguments all other will be default
cmd$input  <- file.path(getwd(),"4490600_5321400.tif")
cmd$filter <- "touzi"
cmd$out <- paste0(getwd(),"/out",cmd$filter,".tif")

## run algorithm
retStack<-runOTB(cmd,gili = otblink)

## plot raster
raster::plot(retStack)
}
}
