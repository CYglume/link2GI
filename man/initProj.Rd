% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/initProj.R
\name{initProj}
\alias{initProj}
\title{Set up a project environment}
\usage{
initProj(
  root_folder = ".",
  folders = NULL,
  folder_names = NULL,
  init_git = TRUE,
  init_renv = TRUE,
  code_subfolder = c("src", "src/functions"),
  global = FALSE,
  libs = NULL,
  openproject = TRUE,
  newsession = FALSE,
  standard_setup = "baseSpatial",
  loc_name = NULL
)
}
\arguments{
\item{root_folder}{root directory of the project.}

\item{folders}{list of subfolders within the project directory that will be created.}

\item{folder_names}{names of the variable values that point to subfolders. If not
provided, the base paths of the folders is used.}

\item{init_git}{logical: init git repository in the project directory.}

\item{init_renv}{logical: init renv in the project directory.}

\item{code_subfolder}{subfolders for scripts and functions within the project directory that will be created. The
folders src and src/functions are mandatory.}

\item{global}{logical: export path strings as global variables?}

\item{libs}{vector with the  names of libraries that are required for the initial project.}

\item{openproject}{open project after creating it, d default = TRUE}

\item{newsession}{open project in a new session? default is FALSE}

\item{standard_setup}{use predefined settings. c("base","baseSpatial", "advancedSpatial"). In this case, only the name of the root folder is required.}

\item{loc_name}{by default MySite defines the dataset folderlocation and is meant to be a code for the research site}
}
\value{
dirs, i.e. a list containing the project pathes.
}
\description{
Set up the project environment with a defined folder structure, an RStudio project, initial script and
settings templates and git and dvc repository, if necessary.
}
\details{
The function uses [setupProj] for setting up the folders. Once the project is creaeted, manage the overall
configuration of the project by the src/functions/000_settings.R script. It is sourced at the begining of the
template scripts that are created by default. Define additional constans, required libraries etc. in the
000_settings.R at any time. If additonal folders are required later, just add them manually. They will be parsed as
part of the 000_settings.R and added to a variable called dirs that allows easy acces to any of the folders. Use
this variable to load/save data to avoid any hard coded links in the scripts except the top-level root folder which
is defined once in the main control script located at src/main.R.
}
\examples{
\dontrun{
root_folder <- tempdir() # Mandatory, variable must be in the R environment.
dirs <- initProj(root_folder = root_folder, standard_setup = "baseSpatial")
}

}
