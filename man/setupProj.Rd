% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/initProj.R
\name{setupProj}
\alias{setupProj}
\title{Setup project folder structure}
\usage{
setupProj(
  root_folder = tempdir(),
  folders = c("data", "data/tmp"),
  code_subfolder = NULL,
  global = FALSE,
  libs = NULL,
  setup_script = "000_setup.R",
  fcts_folder = NULL,
  source_functions = !is.null(fcts_folder),
  standard_setup = NULL,
  create_folders = TRUE
)
}
\arguments{
\item{root_folder}{root directory of the project.}

\item{folders}{list of subfolders within the project directory.}

\item{code_subfolder}{define subdirectories for code should be created.}

\item{global}{logical: export path strings as global variables?}

\item{libs}{vector with the  names of libraries}

\item{setup_script}{name of the setup script. This file will not be sourced from the functions folder even if
fcts_folder is provided.}

\item{fcts_folder}{path of the folder holding the functions. All files in
this folder will be sourced.}

\item{source_functions}{logical: should functions be sourced?}

\item{standard_setup}{use predefined settings. In this case, only the name of the root folder is required. 
name of the git repository must be supplied to the function.}

\item{create_folders}{create folders if not existing already.}
}
\value{
A list containing the project settings.
}
\description{
Defines folder structures and creates them if necessary, loads
libraries, and sets other project relevant parameters.
}
\examples{
\dontrun{
setupProj(
  root_folder = "~/edu", folders = c("data/", "data/tmp/"),
  libs = c("link2GI")
)
}

}
