[{"path":"https://r-spatial.github.io/link2GI/articles/link2GI1.html","id":"what-is-link2gi","dir":"Articles","previous_headings":"","what":"What is link2GI?","title":"Link GI to R","text":"link2GI package provides small linking tool simplify use GRASS GIS, SAGA GIS, Orfeo Toolbox (OTB) GDAL binaries R users, focus making software accessible non-operating system specialists highly experienced GIS geeks. fact, direct result numerous graduate courses R(-GIS) novices hostile world university computer pools running extremely limited Windows systems.","code":""},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI1.html","id":"why-link2gi-now","dir":"Articles","previous_headings":"","what":"Why link2GI now?","title":"Link GI to R","text":"R lot classes storing manipulating spatial data. vector data, sp currently great sf packages well known, raster data world largely covered terra recently stars packages. specific links, needed manipulating atmospheric models, packages like ncdf4 helpful. spatial analysis often supported wrapper packages integrate external libraries, command line tools, mixture R-like syntax geosphere, Distance, igraph, spatstat. comprehensive introduction spatial R-biotope backgrounds excellently treated Geocomputation R, highly recommended reference book, also indispensable basis working analyzing spatial data R/Python. Despite spatial analysis data handling capabilities R world, can said (least non-R point view) still huge gap R mature open source Geographic Information System (GIS) even Remote Sensing (RS) software community. QGIS, GRASS GIS, SAGA GIS provide extensive, growing, mature collection sophisticated algorithms. algorithms provided fast, stable well proven. Probably R users somehow connected GI community know great wrapper packages bridge gap. GRASS GIS 7/8 rgrass SAGA GIS RSAGA Rsagacmd. mature wrapper package [Orfeo Toolbox] (https://gitlab.orfeo-toolbox.org/orfeotoolbox/otb), indispensable remote sensing. package creates API link, also provides lightweight wrapper easy use OTB modules R. Unfortunately run lot technical problems depending chosen operating system (OS) library dependencies GIS software versions. case RSAGA example, main problem SAGA GIS developers change syntax strategy command line interface (CLI), also within release calls differ OS OS. maintenance RSAGA least tedious (thumbs ). Another example GRASS GIS, known sophisticated setup environment spatial properties database. “” want use specific GRASS algorithm R, probably get lost setting OS dependencies necessary set correct temporary permanent GRASS environment “outside”. due strict space projection requirements GRASS, much due demanding OS environments, especially Windows. cut long story short, bit cumbersome deal stuff just want start GRASS R command line, e.g. powerful random walk cost analysis (r.walk) call provided GRASS.","code":""},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI1.html","id":"what-does-linking-mean","dir":"Articles","previous_headings":"","what":"What does linking mean?","title":"Link GI to R","text":"Linking simply means providing necessary environment variables allow full access command line APIs software tools mentioned. link2GI also tries compliant existing wrapper packages integrate use. link2GI tries analyse software installed version order create temporary permanent environment meets requirements mentioned .","code":""},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI1.html","id":"grass-gis","dir":"Articles","previous_headings":"What does linking mean?","what":"GRASS GIS","title":"Link GI to R","text":"GRASS GIS demanding requirements. needs lot environment path variables correct setup geographic data parameters. linkGRASS function tries find installations lets (optionally) choose one want use generate necessary variables. result can use rgrass package command line API GRASS.","code":""},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI1.html","id":"saga-gis","dir":"Articles","previous_headings":"What does linking mean?","what":"SAGA GIS","title":"Link GI to R","text":"SAGA GIS much easier set . , linkSAGA function try find SAGA installations, let (optionally) choose one, generate necessary variables. can also use RSAGA, pass result linkSAGA like RSAGA::rsaga.env(path = saga$sagaPath). easy use can just use R system() call interface R saga_cmd API.","code":""},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI1.html","id":"orfeo-toolbox-otb","dir":"Articles","previous_headings":"What does linking mean?","what":"Orfeo Toolbox (OTB)","title":"Link GI to R","text":"Orfeo Toolbox (OTB) powerful remote sensing toolbox. widely used classification, filtering machine learning applications. find implemented algorithms various R packages, always much slower running small data chunks. link2GI searches links OTB installations given search path returns result concise list. Due missing wrapper package, list-based OTB module function parser also available, can piped runOTB function convenient function call.","code":""},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI1.html","id":"gdal","dir":"Articles","previous_headings":"What does linking mean?","what":"GDAL","title":"Link GI to R","text":"Although GDAL well integrated R packages, quite cases advantageous use system calls obtain binaries directly, especially discontinuation rgdal convenience packages. particular, development towards GDAL 3.x optionally different boxed versions GDAL binaries work different Python proj4/proj6 libraries make often difficult find right GDAL version. link2GI generates list paths commands GDAL installations given search path. list, can easily use available API calls installation.","code":""},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI2.html","id":"brute-force-search","dir":"Articles","previous_headings":"","what":"Brute force search","title":"Basic usage of link2GI","text":"Automatic searching finding installed GIS software binaries done find functions. Depending operating system number installed versions get data frame binary module folders. GRASS OTB `find’ functions provide overview installed software. functions create links change settings.","code":"# find all SAGA GIS installations at the default search location require(link2GI) saga <- link2GI::findSAGA() saga require(link2GI) grass <- link2GI::findGRASS() grass otb <- link2GI::findOTB(searchLocation = \"~/\") otb"},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI2.html","id":"setting-up-project-structures","dir":"Articles","previous_headings":"","what":"Setting up project structures","title":"Basic usage of link2GI","text":"just calling link2GI fly, .e. single temporary operation, need set folders project structures. working complex project, might helpful fixed structure. goes existing GRASS projects need specific mapsets locations. simple (can call dirty) approach initProj function, creates folder structures (existing) sets global variables (desired) containing paths strings.","code":"require(link2GI) dirs = link2GI::createFolders(root_folder = tempdir(),                                 folders = c(\"data/\",                                             \"data/level0/\",                                             \"data/level1/\",                                             \"output/\",                                             \"run/\",                                             \"fun/\")                                 ) dirs"},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI2.html","id":"linksaga---find-and-set-up-saga-api-bindings","dir":"Articles","previous_headings":"","what":"linkSAGA - Find and set up ‘SAGA’ API bindings","title":"Basic usage of link2GI","text":"past quite tedious link correct SAGA GIS version. Since version 1.x.x RSAGA things much better. new RSAGA::rsaga.env() function get first RSAGA version search path. also possible pass version number shown . Storing result appropriate variables even allow easily switch different SAGA GIS installations.","code":""},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI2.html","id":"linkgrass---find-and-set-up-grass-78-api-bindings","dir":"Articles","previous_headings":"","what":"linkGRASS - Find and set up GRASS 7/8 API bindings","title":"Basic usage of link2GI","text":"linkGRASS initializes session environment system paths easy access GRASS GIS 7.x./8.x. correct setting spatial projection parameters done automatically either using existing valid raster terra, sp sf object manually providing list minimum required parameters. properties used initialize either temporary permanent rgrass environment, including correct GRASS 7/8 database structure. specify , linkGRASS create EPSG:4326 worldwide site. time consuming part Windows systems search process. can easily take 10 minutes . speed process, can also provide correct parameter set. best way call findGRASS manually. call linkGRASS returned version arguments choice. linkGRASS function tries find valid GRASS GIS binaries analyzing GRASS GIS startup script files. identifying GRASS GIS binaries, necessary system variables settings generated passed temporary R environment. one valid installation run linkGRASS arguments select_ver = TRUE, asked select one.","code":""},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI2.html","id":"standard-full-search-usage","dir":"Articles","previous_headings":"linkGRASS - Find and set up GRASS 7/8 API bindings","what":"Standard full search usage","title":"Basic usage of link2GI","text":"common use GRASS single call algorithm. user interested setting parameters. linGRASS7(georeferenced-dataset)automatic search finds theGRASSbinaries using georeferenced-dataset object spatial referencing necessary settings.  **NOTE:** highly recommended linking procedure --fly invocations ofGRASS. Please also note oneGRASS` installation found, one highest version number automatically selected. Take look following examples, show typical call well-known sp sf vector data objects. Starting sp. Now sf based data. second common situation use existing GRASS site project, either existing data sets manually provided parameters.","code":"# get meuse data as sp object and link it temporary to GRASS require(link2GI) require(sf) require(sp) crs = 28992 # get data  data(meuse)  meuse_sf = st_as_sf(meuse, coords = c(\"x\", \"y\"), crs = crs, agr = \"constant\")  # Automatic search and find of GRASS binaries # using the meuse sp data object for spatial referencing # This is the highly recommended linking procedure for on the fly jobs # NOTE: if more than one GRASS installation is found the highest version will be selected  linkGRASS(meuse_sf,epsg = crs) require(link2GI)  require(sf)   # get  data  nc <- st_read(system.file(\"shape/nc.shp\", package=\"sf\")) terra::crs(nc)  # Automatic search and find of GRASS binaries  # using the nc sf data object for spatial referencing  # This is the highly recommended linking procedure for on the fly jobs  # NOTE: if more than one GRASS installation is found the highest version will be selected    grass<-linkGRASS(nc,returnPaths = TRUE) library(link2GI)  require(sf)   # proj folders  root_folder<-tempdir()  paths<-link2GI::createFolders(root_folder = root_folder,                           folders = c(\"project1/\"))   # get  data  nc <- st_read(system.file(\"shape/nc.shp\", package=\"sf\"))   # CREATE and link to a permanent GRASS folder at \"root_folder\", location named \"project1\"  linkGRASS(nc, gisdbase = root_folder, location = \"project1\")   # ONLY LINK to a permanent GRASS folder at \"root_folder\", location named \"project1\"  linkGRASS(gisdbase = root_folder, location = \"project1\", gisdbase_exist = TRUE )    # setting up GRASS manually with spatial parameters of the nc data  epsg = 28992  proj4_string <- sp::CRS(paste0(\"+init=epsg:\",epsg))    linkGRASS(spatial_params = c(178605,329714,181390,333611,proj4_string@projargs),epsg=epsg)   # creating a GRASS gisdbase manually with spatial parameters of the nc data  # additionally using a peramanent directory \"root_folder\" and the location \"nc_spatial_params \"  epsg = 4267  proj4_string <- sp::CRS(paste0(\"+init=epsg:\",epsg))@projargs  linkGRASS(gisdbase = root_folder,             location = \"nc_spatial_params\",             spatial_params = c(-84.32385, 33.88199,-75.45698,36.58965,proj4_string),epsg = epsg)"},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI2.html","id":"typical-for-specified-search-paths-and-os","dir":"Articles","previous_headings":"linkGRASS - Find and set up GRASS 7/8 API bindings","what":"Typical for specified search paths and OS","title":"Basic usage of link2GI","text":"full disk search can tedious, especially Windows can easily take 10 minutes . helpful specify search path narrow search. search GRASS installations home directory, can use following command. already full search kow installation fo example using command findGRASS can use result directly linking.","code":"# Link the GRASS installation and define the search location  linkGRASS(nc, search_path = \"~/\") findGRASS()      instDir version installation_type 1 /usr/lib/grass83   8.3.2             grass  # now linking it  linkGRASS(nc,c(\"/usr/lib/grass83\",\"8.3.2\",\"grass\"),epsg = 4267)   # corresponding linkage running windows linkGRASS(nc,c(\"C:/Program Files/GRASS GIS7.0.5\",\"GRASS GIS 7.0.5\",\"NSIS\"))"},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI2.html","id":"manual-version-selection","dir":"Articles","previous_headings":"linkGRASS - Find and set up GRASS 7/8 API bindings","what":"Manual version selection","title":"Basic usage of link2GI","text":"Finally, specific examples related interactive selection OS-specific settings. Manually select GRASS installation use meuse sf object spatial referencing. one installation directly selected.","code":"linkGRASS(nc, ver_select = TRUE)"},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI2.html","id":"creating-a-permanent-gisdbase-folder","dir":"Articles","previous_headings":"linkGRASS - Find and set up GRASS 7/8 API bindings","what":"Creating a permanent gisdbase folder","title":"Basic usage of link2GI","text":"Create link permanent GRASS gisdbase (folder structure) “~/temp3” default mapset “PERMANENT”” location “project1”. Use sf object spatial attributes.","code":"linkGRASS(x = nc,                       gisdbase = \"~/temp3\",                      location = \"project1\")"},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI2.html","id":"using-a-permanent-gisdbase-folder","dir":"Articles","previous_headings":"linkGRASS - Find and set up GRASS 7/8 API bindings","what":"Using a permanent gisdbase folder","title":"Basic usage of link2GI","text":"Link permanent GRASS gisdbase (folder structure) “~/temp3” default mapset “PERMANENT” location named “project1”. Use formerly referencend nc sf object parameter spatial attributes.","code":"linkGRASS(gisdbase = \"~/temp3\", location = \"project1\",                       gisdbase_exist = TRUE)"},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI2.html","id":"manual-setup-of-the-spatial-attributes","dir":"Articles","previous_headings":"linkGRASS - Find and set up GRASS 7/8 API bindings","what":"Manual Setup of the spatial attributes","title":"Basic usage of link2GI","text":"Setting GRASS manually spatial parameters meuse data","code":"linkGRASS(spatial_params = c(178605,329714,181390,333611,                               \"+proj=sterea +lat_0=52.15616055555555                                 +lon_0=5.38763888888889 +k=0.9999079                                 +x_0=155000 +y_0=463000 +no_defs                                 +a=6377397.155 +rf=299.1528128                                +towgs84=565.4171,50.3319,465.5524,                                 -0.398957,0.343988,-1.8774,4.0725                                +to_meter=1\"),epsg = 28992)"},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI2.html","id":"a-typical-use-case-for-the-orfeo-toolbox-wrapper","dir":"Articles","previous_headings":"","what":"A typical use case for the Orfeo Toolbox wrapper","title":"Basic usage of link2GI","text":"link2GI supports use Orfeo Toolbox simple list-based wrapper function. Actually, two functions parse module function syntax dumps generate command list can easily modified necessary arguments. installed user home directory need adrees : Usually get module list first: Based modules current version `OTB’, can select module(s) want use. Admittedly, simple preliminary approach. Nevertheless, give valid list OTB API calls can easily manipulate suit needs. following working example give idea use .","code":"# link to the installed OTB Linux HOME directory otblink<-link2GI::linkOTB(searchLocation = \"~/apps/OTB-8.1.2-Linux64/\")     # get the list of modules from the linked version algo<-parseOTBAlgorithms(gili = otblink) ## for the example we use the edge detection,  algoKeyword <- \"EdgeExtraction\"  ## extract the command list for the selected algorithm  cmd <- parseOTBFunction(algo = algoKeyword, gili = otblink)  ## print the current command print(cmd) require(link2GI) require(terra) require(listviewer)  otblink <- link2GI::linkOTB(searchLocation = \"~/apps/OTB-8.1.2-Linux64/\")  root_folder<-tempdir()   fn <- system.file(\"ex/elev.tif\", package = \"terra\")  ## for the example we use the edge detection,  algoKeyword<- \"EdgeExtraction\"  ## extract the command list for the selected algorithm  cmd<-parseOTBFunction(algo = algoKeyword, gili = otblink)  ## define the mandatory arguments all other will be default cmd$help = NULL cmd$input_in  <- fn cmd$filter <- \"touzi\" cmd$channel <- 1 cmd$out <- file.path(root_folder,paste0(\"out\",cmd$filter,\".tif\"))  ## run algorithm retStack<-runOTB(cmd,gili = otblink)  ## plot filter raster on the green channel plot(retStack)"},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI2.html","id":"usecases-presented-on-the-geostat-august-2018","dir":"Articles","previous_headings":"","what":"Usecases presented on the GEOSTAT August 2018","title":"Basic usage of link2GI","text":"GEOSTAT 2018 (see https://opengeohub.org) Prague complex use cases presented.","code":""},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI2.html","id":"find-slides-and-materials","dir":"Articles","previous_headings":"Usecases presented on the GEOSTAT August 2018","what":"Find slides and materials","title":"Basic usage of link2GI","text":"Presentation slides Github Repository","code":""},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI2.html","id":"the-examples","dir":"Articles","previous_headings":"Usecases presented on the GEOSTAT August 2018","what":"The examples","title":"Basic usage of link2GI","text":"Basic usage SAGA OTB calls - SAGA & OTB basic usecase Wrapping GRASS GIS example Markus Neteler presented GEOSTAT 2018 - Analysing ECA&D climatic data - reloaded Performing GRASS based cost analysis huge cost raster - Beetle spread high asia Deriving canopy height model using mixed API approach - Canopy Height Model UAV derived point clouds","code":""},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI3.html","id":"real-world-example","dir":"Articles","previous_headings":"","what":"Real world example","title":"GRASS application for real world big data","text":"typical example use existing project database GRASS. GRASS organizes data internal file structure known gisdbase folder, mapset, one locations within mapset. raster vector data stored within structure organized GRASS. typical task might work datasets already stored existing GRASS structure.","code":""},{"path":[]},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI3.html","id":"downloading-census-data","dir":"Articles","previous_headings":"Real world example","what":"Downloading census data","title":"GRASS application for real world big data","text":"First, need data real world. case, ’s 2011 German microcensus data, , 35 million points several dozen characteristics, can definitely called Big Data. Download data: presentation real example interesting aspects: provided typical government format large enough (>35 million points) informative many spatial analyses. also need download metadata description file website mentioned get information projection, data concepts, etc.","code":"# (https://www.zensus2011.de/EN/Service/Contact/contact_node.html) wget https://www.zensus2011.de/SharedDocs/Downloads/DE/Pressemitteilung/DemografischeGrunddaten/csv_Bevoelkerung_100m_Gitter.zip?__blob=publicationFile&v=3 # we need some additional packages  require(link2GI)  require(curl)  # first of all we create  a project folder structure    dirs = link2GI::createFolders(root_folder = paste0(tempdir(),\"/link2GI_examples\"),                                    folders =  c(\"run/\"))  # set runtime directory   setwd(dirs$path_run)  # get some typical authority generated data    url<-\"https://www.zensus2011.de/SharedDocs/Downloads/DE/Pressemitteilung/DemografischeGrunddaten/csv_Bevoelkerung_100m_Gitter.zip;jsessionid=294313DDBB57914D6636DE373897A3F2.2_cid389?__blob=publicationFile&v=3\"  res <- curl::curl_download(url, paste0(path_run,\"testdata.zip\"))  # unzip it  unzip(res,files = grep(\".csv\", unzip(res,list = TRUE)$Name,value = TRUE),        junkpaths = TRUE, overwrite = TRUE) fn <- list.files(pattern = \"[.]csv$\", path = getwd(), full.names = TRUE)"},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI3.html","id":"preprocessing-the-data","dir":"Articles","previous_headings":"Real world example > Downloading census data","what":"Preprocessing the data","title":"GRASS application for real world big data","text":"downloading data, use demonstration stuff. look, data nothing x,y,z projection information assumed. can easily rasterize data intentionally gridded data. means value grid size 100 100 meters.","code":"# fast read with data.table   xyz <- data.table::fread(paste0(path_run,\"/Zensus_Bevoelkerung_100m-Gitter.csv\"))   head(xyz) require(RColorBrewer)  require(terra)  require(mapview)   # clean dataframe  xyz <- xyz[,-1]  # rasterize it according to the projection    r <- terra::rast(xyz, type=\"xyz\")  terra::crs(r) <- 3035  # map it  p <- colorRampPalette(brewer.pal(8, \"Reds\"))  # aet resolution to 1 sqkm  mapview::mapviewOptions(mapview.maxpixels = r@ncols*r@nrows/10)  mapview::mapview(r, col.regions = p,                    at = c(-1,10,25,50,100,500,1000,2500),                    legend = TRUE)"},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI3.html","id":"setting-up-a-grass-project","dir":"Articles","previous_headings":"Real world example > Downloading census data","what":"Setting up a GRASS project","title":"GRASS application for real world big data","text":"Nothing new far. Now create new permanent GRASS gisbase using spatial parameters raster object. know, linkGRASS function performs full search one existing GRASS installations. valid GRASS installation exists, parameters set rgrass package linked. Due fact gisdbase_exist set FALSE default, create new structure according R object. Finally, can import data GRASS gisdbase using functionality rgass package. First need convert raster/terra object GeoTIFF file. GDAL format possible, GeoTIFF common stable. Let’s now import vector data set. First create sf object. GRASS gisdbase already exists. pass linkGRASS argument gisdbase_exist=TRUE import xyz data generic GRASS vector points. Note take time.","code":"require(link2GI) # initialize GRASS and set up a permanent structure   link2GI::linkGRASS(x = r,                      gisdbase = paste0(tempdir(),\"/link2GI_examples\"),                     location = \"microzensus2011\") require(link2GI) require(raster) require(rgrass)  # write it to geotiff   terra::writeRaster(r, paste0(path_run,\"/Zensus_Bevoelkerung_100m-Gitter.tif\"),         x               overwrite = TRUE)  # import raster to GRASS rgrass::execGRASS('r.external',                    flags=c('o',\"overwrite\",\"quiet\"),                    input=paste0(path_run,\"/Zensus_Bevoelkerung_100m-Gitter.tif\"),                    output=\"Zensus_Bevoelkerung_100m_Gitter\",                    band=1)  # check imported data set rgrass::execGRASS('r.info',                    map = \"Zensus_Bevoelkerung_100m_Gitter\") xyz_sf = st_as_sf(xyz,                     coords = c(\"x_mp_100m\", \"y_mp_100m\"),                     crs = 3035,                     agr = \"constant\")  #map points  sf::plot_sf(xyz_sf) require(sf)  require(sp)  require(link2GI)     sf2gvec(x =  xyz_sf,            obj_name = \"Zensus_Bevoelkerung_100m_\",            gisdbase = paste0(tempdir(),\"/link2GI_examples\"),            location = \"microzensus2011\",            gisdbase_exist = TRUE                       )   # check imported data set rgrass::execGRASS('v.info', map = \"Zensus_Bevoelkerung_100m_\")"},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI4.html","id":"a-typical-use-case-for-the-orfeo-toolbox-wrapper","dir":"Articles","previous_headings":"","what":"A typical use case for the Orfeo Toolbox wrapper","title":"OTB Wrapper","text":"link2GI supports use Orfeo Toolbox simple list-based wrapper function. Actually, two functions parse module function syntax dumps generate command list can easily modified necessary arguments. Usually get module list first: Based modules current version `OTB’, can select module(s) want use. Admittedly straightforward preliminary approach. Nevertheless provids valid list OTB API calls can easily manipulated needs. following working example give idea use .","code":"# link to the installed OTB  otblink<-link2GI::linkOTB()   # get the list of modules from the linked version algo<-parseOTBAlgorithms(gili = otblink) ## for the example we use the edge detection,  algoKeyword<- \"EdgeExtraction\"  ## extract the command list for the choosen algorithm  cmd<-parseOTBFunction(algo = algoKeyword, gili = otblink)  ## print the current command print(cmd) require(link2GI) require(raster) require(listviewer)  otblink<-link2GI::linkOTB()  root_dir<-tempdir()   fn <- system.file(\"ex/elev.tif\", package = \"terra\")  ## for the example we use the edge detection,  algoKeyword<- \"EdgeExtraction\"  ## extract the command list for the choosen algorithm  cmd<-parseOTBFunction(algo = algoKeyword, gili = otblink)  ## get help using the convenient listviewer listviewer::jsonedit(cmd$help)  ## define the mandantory arguments all other will be default cmd$input_in  <- fn cmd$filter <- \"touzi\" cmd$channel <- 1 cmd$out <- paste0(root_dir,paste0(\"\\\\out\",cmd$filter,\".tif\"))  ## run algorithm retStack<-runOTB(cmd,gili = otblink)  ## plot filter raster on the green channel plot(retStack)"},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI5.html","id":"reproducible-project-structure","dir":"Articles","previous_headings":"","what":"Reproducible Project Structure","title":"Reproducible project structures","text":"Reproducible projects R emphasize streamlined project setup efficient workflows. number helpful tools R universe, renv, usethis, , range setting stable R environment generating custom project structures getting necessary paths easy way. addition, number project structure packages templates creating easy--use transparent project structures. Namely, tinProjects, prodigenr workflowr R packages designed facilitate reproducible research automated project structuring standardization. promote organized project directories, emphasize reproducibility integrating tools like Git renv, reduce manual setup efforts ensure consistent error-free project initialization. packages help build solid foundation research ensure best practices include using separate scripts data processing, analysis, reporting, combining code narrative R Markdown documents start. organized setup improves reproducibility making easier maintain, share, replicate research. comprehensive overview, look CRAN Task View Reproducible Research.","code":""},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI5.html","id":"why-initproj-then","dir":"Articles","previous_headings":"Reproducible Project Structure","what":"Why initProj then?","title":"Reproducible project structures","text":"context link2GI, relies heavily third-party command-line APIs requires complex stable folder file structures, flexible, lightweight R project setup greatly improves integration OS command-line tools spatial workflows : Streamlining integration: Simplifies integration essential command-line tools GDAL sophisticated Orfeo Toolbox (OTB) growing universe r(-)spatial packages advanced geospatial processing. Improve data exchange: Organized variable metadata management ensures accurate efficient data transfer different especially command-line based processes APIs. Enhanced Cross-Platform Compatibility: Facilitates cross-platform adaptability, critical using multiple spatial analysis tools, even using different shells. Performance Optimization: Switching generic R command-line tools takes advantage speed efficiency command-line tools, especially beneficial handling large spatial datasets. initProj provides complete flexible working environment GI projects. focus simple, efficient reproducible project management data handling. basic framework formed defined folder structure, initial scripts configuration templates well optional Git repositories renv environment. corresponding RStudio project file also created. supports automatic installation (needed) loading required libraries including various standard setup skeletons simplify project initialisation. function creates skeleton skeleton scripts main-control.R, pre-processing.R, 10-processing.R post-processing.R, creates corresponding parameter configurations files stored yaml files scr/configs/. script src/functions/000_settings.R holds specific project settings. Easy access project paths provided via list variable dirs. reason, link2GI package includes lean lightweight focused approach integrates git, renv, highly flexible folder package setup process simpler existing approaches, increasing efficiency, accuracy, performance geospatial workflows.","code":""},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI5.html","id":"using-the-rstudio-gui","dir":"Articles","previous_headings":"Reproducible Project Structure > Why initProj then?","what":"Using the RStudio GUI","title":"Reproducible project structures","text":"using RStudio, new project can created simply selecting Create Project Structure (link2GI) template File -> New Project -> New Directory -> New Project Wizard  dialogue.","code":""},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI5.html","id":"using-the-console","dir":"Articles","previous_headings":"Reproducible Project Structure > Why initProj then?","what":"Using the Console","title":"Reproducible project structures","text":"basic setup default project, initializes Git renv, done following call. easy customize folder structure. default create [1] \"level0\"  \"level1\"  \"level2\"  \"run\"     \"rawdata\" [1] \"src\"           \"src/functions\" \"src/configs\" Use folders argument create specific structure subfolder structure project. complex call integrates git renv setup, adds additional folders libraries well location tag :","code":"root_folder = tempdir() # Mandatory, variable must be in the R environment. dirs = initProj(root_folder = root_folder, standard_setup = \"baseSpatial\") link2GI::setup_default()$baseSpatial$dataFolder link2GI::setup_default()$baseSpatial$code_subfolder root_folder = tempdir() # Mandatory, variable must be in the R environment. dirs = initProj(root_folder = root_folder,                   standard_setup = \"baseSpatial\",                  folders = c(\"data/rawdata/provider1/\", \"docs/quarto/\")                  ) dirs  = initProj(root_folder = tempdir(),           folders = c(\"data/newdata/\"),          init_git = TRUE,           init_renv = TRUE,           code_subfolder = c(\"src\", \"src/functions\",\"src/deprec\"),          standard_setup = \"baseSpatial\",          loc_name = \"oldplace\",           appendlibs = c(\"raster\"),          openproject=TRUE)"},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI6.html","id":"vignette-info","dir":"Articles","previous_headings":"","what":"Vignette Info","title":"Installation guide for link2GI related Software","text":"vignette slightly modified version installation guide archived RQGIS package. Many thanks Patrick Schratz Jannis Muenchow. vignette guides installation process QGIS, GRASS SAGA-GIS well Orfeo Toolbox GDAL three different platforms (Windows, Mac, Linux). Following instructions ensure link2GI works properly. exception SAGA (SAGA quite idiosyncratic terms interface compatibility), recommend using latest stable version software packages. Overall, link2GI provides access thousand reliable well-known geoalgorithms. Please note, however, number geoalgorithms can use link2GI depends platform, system architecture, selection installed third-party providers, software package versions.","code":""},{"path":[]},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI6.html","id":"qgis-grass-and-saga","dir":"Articles","previous_headings":"Windows","what":"QGIS, GRASS and SAGA","title":"Installation guide for link2GI related Software","text":"least two ways install QGIS Windows. first option standalone installer [QGIS installer page] (https://www.qgis.org/download/). install QGIS along third party GRASS SAGA. want use even third party applications (e.g. GDAL, GEOS, Taudem, OTB, PostGIS, etc.) strongly recommended use OSGeo4W network installer. installer available QGIS installer page well OSGeo4W website. NOTE: install QGIS 2.x. easiest way install OSGeo4W use express installation:  Sorry German dialogs. However, easy enough follow steps. Select “Express Installation Next select “QGIS, GRASS GDAL Start installation. installation less standalone QGIS installation. However, get full range geoalgorithms available QGIS, recommend using advanced settings OSGeo4W Network installer: Run OSGeo4W setup select advanced installation.  Accept default settings reach “Select Packages” window.  expanding command line utilities, select several command line tools gdal python-core (course, can select components well):  Additionally choose Desktop-GIS GRASS, Orfeo Toolbox, SAGA QGIS (even directly supported link2GI moment). install latest QGIS 3.x version well long term release. Leave rest , click “Next” wait OSGeo4W suggestions, accept.  Clicking “Next” start download installation process, may take . want change, uninstall update installed components, can later running ../OSGeo4W/bin/osgeo4w-setup.exe. Alternatively, can download latest [OSGeo4W-executable] (https://trac.osgeo.org/osgeo4w/) run . also want use LiDAR processing tools (LAStools), please follow steps found .","code":""},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI6.html","id":"orfeo-toolbox","dir":"Articles","previous_headings":"Windows","what":"Orfeo Toolbox","title":"Installation guide for link2GI related Software","text":"Please download latest (currently OTB-7.2.0-Win64) suitable version Orfeo Toolbox software. follow OTB team’s advice: “provide standalone binaries Windows require administrative privileges. Download archive (32 64 bit) extract location choice. Double-click monteverdi.bat start Monteverdi, mapla.bat OTB application browser. Please refer CookBook detailed installation instructions.","code":""},{"path":[]},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI6.html","id":"ubuntu","dir":"Articles","previous_headings":"Linux","what":"Ubuntu","title":"Installation guide for link2GI related Software","text":"install QGIS using built-software managers, likely end outdated version QGIS. install recent versions QGIS, recommend following installation instructions [QGIS installers website] (https://www.qgis.org/download/). describe installation QGIS Debian/Ubuntu described . link2GI also work Linux distributions Ubuntu. However, Ubuntu, Debian Manjaro tested. Open terminal window. First, make sure remove QGIS GRASS packages may previously installed repositories: Next add correct repository /etc/apt/sources.list. , use current long-term release (3.10): QGIS 3.3x.x Ubuntu 22.04 , can install QGIS GRASS saga Orfeo Toolbox follows: like use another SAGA version, need compile (see ). Please note, however, QGIS currently supports SAGA LTR 2.3.x far know.","code":"sudo apt-get --purge remove qgis sudo apt autoremove --purge-remove  sudo apt autoremove sudo apt-get update # install necessary tools sudo apt install gnupg software-properties-common  #add the required keys wget -qO - https://qgis.org/downloads/qgis-2020.gpg.key | sudo gpg --no-default-keyring --keyring gnupg-ring:/etc/apt/trusted.gpg.d/qgis-archive.gpg --import  # verify the key  gpg --fingerprint 51F523511C7028C3  # add the repository # if there are problems  sudo add-apt-repository \"deb https://qgis.org/debian lsb_release -c -s main\"  # if there are problems use the hard-wired \"focal\" release sudo add-apt-repository \"deb https://qgis.org/debian focal main\" # install qgis grass otb saga  sudo apt update sudo apt install qgis python-qgis qgis-plugin-grass grass saga otb-bin"},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI6.html","id":"arch-linux","dir":"Articles","previous_headings":"Linux","what":"Arch Linux","title":"Installation guide for link2GI related Software","text":"can install various QGIS, SAGA GRASS versions Arch User Repository.","code":""},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI6.html","id":"fedora","dir":"Articles","previous_headings":"Linux","what":"Fedora","title":"Installation guide for link2GI related Software","text":"can install current stable QGIS, SAGA GRASS GIS versions via standard software package manager:","code":"sudo dnf install qgis-python qgis qgis-grass saga grass-gui grass-libs"},{"path":[]},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI6.html","id":"saga","dir":"Articles","previous_headings":"Mac OSX","what":"SAGA","title":"Installation guide for link2GI related Software","text":"binary install SAGA macOS. recommend use bottle installation homebrew: link SAGA force, QGIS able detect SAGA. Alternatively, can compile SAGA source SAGA website. However, tedious QGIS2 supports SAGA LTS version.","code":"# brew tap osgeo4mac brew install saga-gis-lts brew link saga-gis-lts --force"},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI6.html","id":"grass","dir":"Articles","previous_headings":"Mac OSX","what":"GRASS","title":"Installation guide for link2GI related Software","text":"can install GRASS6/7/8 via homebrew: binary GRASS installation can found . However, recommend use homebrew approach. installing GRASS independently QGIS via homebrew, please make sure install installed QGIS.","code":"# brew tap osgeo4mac brew install grass6 grass7 grass8"},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI6.html","id":"qgis","dir":"Articles","previous_headings":"Mac OSX","what":"QGIS","title":"Installation guide for link2GI related Software","text":"Two options exist installing QGIS macOS Using homebrew (recommended) Check brew info qgis3 available options. However, use , QGIS compiled source may take > 30 min (depending system). Otherwise, pre-built bottles (= binaries) used speeds installation process lot. Note: Make sure install SAGA GRASS QGIS QGIS finds correct paths.","code":"# brew tap osgeo4mac brew install qgis3"},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI7.html","id":"vignette-info","dir":"Articles","previous_headings":"","what":"Vignette Info","title":"Installation guide for link2GI related Software","text":"vignette slightly modified version installation guide archived RQGIS package. Many thanks Patrick Schratz Jannis Muenchow. vignette guides installation process QGIS, GRASS SAGA-GIS well Orfeo Toolbox GDAL three different platforms (Windows, Mac, Linux). Following instructions ensure link2GI works properly. exception SAGA (SAGA quite idiosyncratic terms interface compatibility), recommend using latest stable version software packages. Overall, link2GI provides access thousand reliable well-known geoalgorithms. Please note, however, number geoalgorithms can use link2GI depends platform, system architecture, selection installed third-party providers, software package versions.","code":""},{"path":[]},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI7.html","id":"qgis-grass-and-saga","dir":"Articles","previous_headings":"Windows","what":"QGIS, GRASS and SAGA","title":"Installation guide for link2GI related Software","text":"least two ways install QGIS Windows. first option standalone installer [QGIS installer page] (https://www.qgis.org/en/site/forusers/download.html). install QGIS along third party GRASS SAGA. want use even third party applications (e.g. GDAL, GEOS, Taudem, OTB, PostGIS, etc.) strongly recommended use OSGeo4W network installer. installer available QGIS installer page well OSGeo4W website. NOTE: install QGIS 2.x. easiest way install OSGeo4W use express installation:  Sorry German dialogs. However, easy enough follow steps. Select “Express Installation Next select “QGIS, GRASS GDAL Start installation. installation less standalone QGIS installation. However, get full range geoalgorithms available QGIS, recommend using advanced settings OSGeo4W Network installer: Run OSGeo4W setup select advanced installation.  Accept default settings reach “Select Packages” window.  expanding command line utilities, select several command line tools gdal python-core (course, can select components well):  Additionally choose Desktop-GIS GRASS, Orfeo Toolbox, SAGA QGIS (even directly supported link2GI moment). install latest QGIS 3.x version well long term release. Leave rest , click “Next” wait OSGeo4W suggestions, accept.  Clicking “Next” start download installation process, may take . want change, uninstall update installed components, can later running ../OSGeo4W/bin/osgeo4w-setup.exe. Alternatively, can download latest [OSGeo4W-executable] (https://trac.osgeo.org/osgeo4w/) run . also want use LiDAR processing tools (LAStools), please follow steps found .","code":""},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI7.html","id":"orfeo-toolbox","dir":"Articles","previous_headings":"Windows","what":"Orfeo Toolbox","title":"Installation guide for link2GI related Software","text":"Please download latest (currently OTB-7.2.0-Win64) suitable version Orfeo Toolbox software. follow OTB team’s advice: “provide standalone binaries Windows require administrative privileges. Download archive (32 64 bit) extract location choice. Double-click monteverdi.bat start Monteverdi, mapla.bat OTB application browser. Please refer CookBook detailed installation instructions.","code":""},{"path":[]},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI7.html","id":"ubuntu","dir":"Articles","previous_headings":"Linux","what":"Ubuntu","title":"Installation guide for link2GI related Software","text":"install QGIS using built-software managers, likely end outdated version QGIS. install recent versions QGIS, recommend following installation instructions [QGIS installers website] (https://www.qgis.org/en/site/forusers/download.html). describe installation QGIS Debian/Ubuntu described . link2GI also work Linux distributions Ubuntu. However, Ubuntu, Debian Manjaro tested. Open terminal window. First, make sure remove QGIS GRASS packages may previously installed repositories: Next add correct repository /etc/apt/sources.list. , use current long-term release (3.10): QGIS 3.3x.x Ubuntu 22.04 , can install QGIS GRASS saga Orfeo Toolbox follows: like use another SAGA version, need compile (see ). Please note, however, QGIS currently supports SAGA LTR 2.3.x far know.","code":"sudo apt-get --purge remove qgis sudo apt autoremove --purge-remove  sudo apt autoremove sudo apt-get update # install necessary tools sudo apt install gnupg software-properties-common  #add the required keys wget -qO - https://qgis.org/downloads/qgis-2020.gpg.key | sudo gpg --no-default-keyring --keyring gnupg-ring:/etc/apt/trusted.gpg.d/qgis-archive.gpg --import  # verify the key  gpg --fingerprint 51F523511C7028C3  # add the repository # if there are problems  sudo add-apt-repository \"deb https://qgis.org/debian lsb_release -c -s main\"  # if there are problems use the hard-wired \"focal\" release sudo add-apt-repository \"deb https://qgis.org/debian focal main\" # install qgis grass otb saga  sudo apt update sudo apt install qgis python-qgis qgis-plugin-grass grass saga otb-bin"},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI7.html","id":"arch-linux","dir":"Articles","previous_headings":"Linux","what":"Arch Linux","title":"Installation guide for link2GI related Software","text":"can install various QGIS, SAGA GRASS versions Arch User Repository.","code":""},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI7.html","id":"fedora","dir":"Articles","previous_headings":"Linux","what":"Fedora","title":"Installation guide for link2GI related Software","text":"can install current stable QGIS, SAGA GRASS GIS versions via standard software package manager:","code":"sudo dnf install qgis-python qgis qgis-grass saga grass-gui grass-libs"},{"path":[]},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI7.html","id":"saga","dir":"Articles","previous_headings":"Mac OSX","what":"SAGA","title":"Installation guide for link2GI related Software","text":"binary install SAGA macOS. recommend use bottle installation homebrew: link SAGA force, QGIS able detect SAGA. Alternatively, can compile SAGA source SAGA website. However, tedious QGIS2 supports SAGA LTS version.","code":"# brew tap osgeo4mac brew install saga-gis-lts brew link saga-gis-lts --force"},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI7.html","id":"grass","dir":"Articles","previous_headings":"Mac OSX","what":"GRASS","title":"Installation guide for link2GI related Software","text":"can install GRASS6/7/8 via homebrew: binary GRASS installation can found . However, recommend use homebrew approach. installing GRASS independently QGIS via homebrew, please make sure install installed QGIS.","code":"# brew tap osgeo4mac brew install grass6 grass7 grass8"},{"path":"https://r-spatial.github.io/link2GI/articles/link2GI7.html","id":"qgis","dir":"Articles","previous_headings":"Mac OSX","what":"QGIS","title":"Installation guide for link2GI related Software","text":"Two options exist installing QGIS macOS Using homebrew (recommended) Check brew info qgis3 available options. However, use , QGIS compiled source may take > 30 min (depending system). Otherwise, pre-built bottles (= binaries) used speeds installation process lot. Note: Make sure install SAGA GRASS QGIS QGIS finds correct paths.","code":"# brew tap osgeo4mac brew install qgis3"},{"path":"https://r-spatial.github.io/link2GI/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Chris Reudenbach. Maintainer, author. Tim Appelhans. Contributor.","code":""},{"path":"https://r-spatial.github.io/link2GI/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Reudenbach C (2024). link2GI: Linking Geographic Information Systems, Remote Sensing Command Line Tools. R package version 0.6-2, https://r-spatial.github.io/link2GI/, https://github.com/r-spatial/link2GI/.","code":"@Manual{,   title = {link2GI: Linking Geographic Information Systems, Remote Sensing and Other Command Line Tools},   author = {Chris Reudenbach},   year = {2024},   note = {R package version 0.6-2, https://r-spatial.github.io/link2GI/},   url = {https://github.com/r-spatial/link2GI/}, }"},{"path":"https://r-spatial.github.io/link2GI/index.html","id":"link2gi","dir":"","previous_headings":"","what":"Linking Geographic Information Systems, Remote Sensing and Other Command Line Tools","title":"Linking Geographic Information Systems, Remote Sensing and Other Command Line Tools","text":"Package website: release link2GI provide functions make bit easier connect straightforward common open source GI software packages R-biotop. supports use wrapper packages direct API-use via system calls. focuses Linux WindowsX operating systems nevertheless also work OSX. several versions installed want use full power GI software nice helpful tool deal strange behaviours requirements. Especially helpful support OTB, GDAL-Python functions simple support use SAGA version via CLI. Hopefully RSAGA Rsagacmd join forces one package future. Anyway current releases (1.4.1) RSAGA well Rsagacmd work environment settings provided linkSAGA.","code":""},{"path":"https://r-spatial.github.io/link2GI/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Linking Geographic Information Systems, Remote Sensing and Other Command Line Tools","text":"link2GIis CRAN. installation stable version please use install.packages(\"link2GI\"). However strongly recommended install latest stable version:","code":"# devtools package devtools::install_github(\"r-spatial/link2GI\", ref = \"master\") # remotes package remotes::install_github(\"r-spatial/link2GI\",ref = \"master\")"},{"path":"https://r-spatial.github.io/link2GI/index.html","id":"third-party-software","dir":"","previous_headings":"","what":"Third Party software","title":"Linking Geographic Information Systems, Remote Sensing and Other Command Line Tools","text":"utilize power open source GI tools within R need install first. first promising opportunity fulfill requirements may install QGIS, GRASS, SAGA-GIS Orfeo-toolbox. Information look Installation guide link2GI related Software.","code":""},{"path":[]},{"path":"https://r-spatial.github.io/link2GI/index.html","id":"initproj-for-reproducible-projects","dir":"","previous_headings":"","what":"initProj for reproducible projects","title":"Linking Geographic Information Systems, Remote Sensing and Other Command Line Tools","text":"initProj provides complete flexible working environment GI projects. focus simple powerful structure. basic framework formed defined folder structure, initial scripts configuration templates well optional Git repositories renv environment. corresponding RStudio project file also created. supports automatic installation (needed) loading required libraries including various standard setup skeletons simplify project initialisation. function creates skeleton skeleton scripts main-control.R, pre-processing.R, 10-processing.R post-processing.R, creates corresponding parameter configurations files stored yaml files scr/configs/. script src/functions/000_settings.R holds specific project settings. Easy access project paths provided via list variable dirs, enables simple, efficient reproducible project management data handling. Information look article Reproducible Projects. using RStudio, new project can created simply selecting Create Project Structure (link2GI) template File -> New Project -> New Directory -> New Project Wizard  dialogue.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/add2Path.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds a defined variable and value to the global search path — add2Path","title":"Adds a defined variable and value to the global search path — add2Path","text":"Adds variable global search path current environment","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/add2Path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds a defined variable and value to the global search path — add2Path","text":"","code":"add2Path(newPath)"},{"path":"https://r-spatial.github.io/link2GI/reference/add2Path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds a defined variable and value to the global search path — add2Path","text":"newPath path added","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/add2Path.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Adds a defined variable and value to the global search path — add2Path","text":"Chris Reudenbach","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/add2Path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds a defined variable and value to the global search path — add2Path","text":"","code":"if (FALSE) { # add path add2Path('pathtosomewhere') }"},{"path":"https://r-spatial.github.io/link2GI/reference/addGitFolders.html","id":null,"dir":"Reference","previous_headings":"","what":"Extent folder list by git repository — addGitFolders","title":"Extent folder list by git repository — addGitFolders","text":"Extent folder list git repository create subdirectories according default values.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/addGitFolders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extent folder list by git repository — addGitFolders","text":"","code":"addGitFolders(folders, git_repository = NULL, git_subfolders = NULL)"},{"path":"https://r-spatial.github.io/link2GI/reference/addGitFolders.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extent folder list by git repository — addGitFolders","text":"folders list subfolders within project directory.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/addGitFolders.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extent folder list by git repository — addGitFolders","text":"","code":"if (FALSE) { addGitFolders(folders = c('data', 'data/tmp'), git_repository = 'myproject') }"},{"path":"https://r-spatial.github.io/link2GI/reference/createFolders.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile folder list and create folders — createFolders","title":"Compile folder list and create folders — createFolders","text":"Compile folder list absolut paths create folders necessary.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/createFolders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile folder list and create folders — createFolders","text":"","code":"createFolders(root_folder, folders, create_folders = TRUE)"},{"path":"https://r-spatial.github.io/link2GI/reference/createFolders.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile folder list and create folders — createFolders","text":"root_folder root directory project. folders list subfolders within project directory. create_folders create folders existing already.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/createFolders.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile folder list and create folders — createFolders","text":"List folder paths names.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/createFolders.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compile folder list and create folders — createFolders","text":"","code":"if (FALSE) {  createFolders(root_folder = tempdir(), folders = c('data/', 'data/tmp/')) } # Create folder list and set variable names pointing to the path values"},{"path":"https://r-spatial.github.io/link2GI/reference/createMeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Create list of metadata from project environment. — createMeta","title":"Create list of metadata from project environment. — createMeta","text":"Create list metadata project environment.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/createMeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create list of metadata from project environment. — createMeta","text":"","code":"createMeta(prj_name)"},{"path":"https://r-spatial.github.io/link2GI/reference/createMeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create list of metadata from project environment. — createMeta","text":"prj_name name project","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/createMeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create list of metadata from project environment. — createMeta","text":"list metadata.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/createMeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create list of metadata from project environment. — createMeta","text":"","code":"if (FALSE) { createMeta(tempdir()) }"},{"path":"https://r-spatial.github.io/link2GI/reference/createScript.html","id":null,"dir":"Reference","previous_headings":"","what":"Create files or scripts from templates — createScript","title":"Create files or scripts from templates — createScript","text":"Create files scripts brew templates supplied package.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/createScript.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create files or scripts from templates — createScript","text":"","code":"createScript(   new_file = file.path(tempdir(), \"tmp.R\"),   template = c(\"script_function\", \"script_control\"),   notes = TRUE,   template_path = system.file(sprintf(\"templates/%s.brew\", template[1]), package =     \"link2GI\") )"},{"path":"https://r-spatial.github.io/link2GI/reference/createScript.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create files or scripts from templates — createScript","text":"new_file name file created template template used new file ('script_function', 'script_control') notes logical: include notes template file template_path path template used","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/createScript.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create files or scripts from templates — createScript","text":"","code":"if (FALSE) { createScript() }"},{"path":"https://r-spatial.github.io/link2GI/reference/findGDAL.html","id":null,"dir":"Reference","previous_headings":"","what":"Search recursivly existing 'GDAL binaries' installation(s) at a given drive/mountpoint — findGDAL","title":"Search recursivly existing 'GDAL binaries' installation(s) at a given drive/mountpoint — findGDAL","text":"Provides  list valid 'GDAL' installation(s)  'Windows' system. major difference osgeo4W  stand_alone installations. functions trys find valid  installations analysing calling batch scripts.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/findGDAL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search recursivly existing 'GDAL binaries' installation(s) at a given drive/mountpoint — findGDAL","text":"","code":"findGDAL(searchLocation = \"default\", quiet = TRUE)"},{"path":"https://r-spatial.github.io/link2GI/reference/findGDAL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search recursivly existing 'GDAL binaries' installation(s) at a given drive/mountpoint — findGDAL","text":"searchLocation drive letter searched, Windows systems default C:/, Linux systems default /usr/bin. quiet boolean  switch supressing console messages default TRUE","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/findGDAL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search recursivly existing 'GDAL binaries' installation(s) at a given drive/mountpoint — findGDAL","text":"dataframe 'GDAL' root folder(s),  command line executable(s)","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/findGDAL.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Search recursivly existing 'GDAL binaries' installation(s) at a given drive/mountpoint — findGDAL","text":"Chris Reudenbach","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/findGDAL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search recursivly existing 'GDAL binaries' installation(s) at a given drive/mountpoint — findGDAL","text":"","code":"run = FALSE if (run) { # find recursively all existing 'GDAL' installations folders starting  # at the default search location findGDAL() }"},{"path":"https://r-spatial.github.io/link2GI/reference/findGRASS.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns attributes of valid 'GRASS GIS' installation(s) on the system. — findGRASS","title":"Returns attributes of valid 'GRASS GIS' installation(s) on the system. — findGRASS","text":"Retrieve list valid 'GRASS GIS' installation(s) system. big difference osgeo4W stand_alone installations. function tries find valid installations analyzing calling batch scripts.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/findGRASS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns attributes of valid 'GRASS GIS' installation(s) on the system. — findGRASS","text":"","code":"findGRASS(searchLocation = \"default\", ver_select = FALSE, quiet = TRUE)"},{"path":"https://r-spatial.github.io/link2GI/reference/findGRASS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns attributes of valid 'GRASS GIS' installation(s) on the system. — findGRASS","text":"searchLocation Location search grass executable, .e. one executable GRASS installation system. Windows systems mandatory include uppercase Windows drive letter colon. Default Windows systems  C:/, Linux systems default /usr/bin. ver_select boolean, Default FALSE. one 'GRASS GIS' installation ver_select = TRUE, user can interactively select preferred 'GRASS GIS' version. quiet boolean, default TRUE. switch suppress console messages","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/findGRASS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns attributes of valid 'GRASS GIS' installation(s) on the system. — findGRASS","text":"data frame 'GRASS GIS' binary folder(s) (.e. individual  individual GRASS commands installed), version name(s)  installation type code(s)","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/findGRASS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Returns attributes of valid 'GRASS GIS' installation(s) on the system. — findGRASS","text":"Chris Reudenbach","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/findGRASS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns attributes of valid 'GRASS GIS' installation(s) on the system. — findGRASS","text":"","code":"if (FALSE) { # find recursively all existing 'GRASS GIS' installation folders starting  # at the default search location findGRASS() }"},{"path":"https://r-spatial.github.io/link2GI/reference/findOTB.html","id":null,"dir":"Reference","previous_headings":"","what":"Search recursivly existing 'Orfeo Toolbox' installation(s) at a given drive/mountpoint — findOTB","title":"Search recursivly existing 'Orfeo Toolbox' installation(s) at a given drive/mountpoint — findOTB","text":"Provides  list valid 'OTB' installation(s)  'Windows' system. major difference osgeo4W  stand_alone installations. functions trys find valid  installations analysing calling batch scripts.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/findOTB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search recursivly existing 'Orfeo Toolbox' installation(s) at a given drive/mountpoint — findOTB","text":"","code":"findOTB(searchLocation = \"default\", quiet = TRUE)"},{"path":"https://r-spatial.github.io/link2GI/reference/findOTB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search recursivly existing 'Orfeo Toolbox' installation(s) at a given drive/mountpoint — findOTB","text":"searchLocation drive letter searched, Windows systems default C:/, Linux systems default /usr/bin. quiet boolean  switch supressing console messages default TRUE","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/findOTB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search recursivly existing 'Orfeo Toolbox' installation(s) at a given drive/mountpoint — findOTB","text":"dataframe 'OTB' root folder(s),  command line executable(s)","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/findOTB.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Search recursivly existing 'Orfeo Toolbox' installation(s) at a given drive/mountpoint — findOTB","text":"Chris Reudenbach","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/findOTB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search recursivly existing 'Orfeo Toolbox' installation(s) at a given drive/mountpoint — findOTB","text":"","code":"if (FALSE) { # find recursively all existing 'Orfeo Toolbox' installations folders starting  # at the default search location findOTB() }"},{"path":"https://r-spatial.github.io/link2GI/reference/findSAGA.html","id":null,"dir":"Reference","previous_headings":"","what":"Search recursively existing 'SAGA GIS' installation(s) at a given drive/mount point — findSAGA","title":"Search recursively existing 'SAGA GIS' installation(s) at a given drive/mount point — findSAGA","text":"Provides  list valid 'SAGA GIS' installation(s)  'Windows' system. major difference osgeo4W  stand_alone installations. functions tries find valid  installations analyzing calling batch scripts.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/findSAGA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search recursively existing 'SAGA GIS' installation(s) at a given drive/mount point — findSAGA","text":"","code":"findSAGA(searchLocation = \"default\", quiet = TRUE)"},{"path":"https://r-spatial.github.io/link2GI/reference/findSAGA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search recursively existing 'SAGA GIS' installation(s) at a given drive/mount point — findSAGA","text":"searchLocation drive letter searched, Windows systems default C:/, Linux systems default /usr/bin. quiet boolean  switch suppressing console messages default TRUE","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/findSAGA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search recursively existing 'SAGA GIS' installation(s) at a given drive/mount point — findSAGA","text":"dataframe 'SAGA GIS' root folder(s), version name(s)  installation type code(s)","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/findSAGA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Search recursively existing 'SAGA GIS' installation(s) at a given drive/mount point — findSAGA","text":"Chris Reudenbach","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/findSAGA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search recursively existing 'SAGA GIS' installation(s) at a given drive/mount point — findSAGA","text":"","code":"if (FALSE) { # find recursively all existing 'SAGA GIS' installation folders starting  # at the default search location findSAGA() }"},{"path":"https://r-spatial.github.io/link2GI/reference/getSpatialClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks if x is of type raster,terra,sf or sp — getSpatialClass","title":"Checks if x is of type raster,terra,sf or sp — getSpatialClass","text":"Checks x raster sp object","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/getSpatialClass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks if x is of type raster,terra,sf or sp — getSpatialClass","text":"","code":"getSpatialClass(obj)"},{"path":"https://r-spatial.github.io/link2GI/reference/getSpatialClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks if x is of type raster,terra,sf or sp — getSpatialClass","text":"obj R raster* sp object","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/getSpatialClass.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Checks if x is of type raster,terra,sf or sp — getSpatialClass","text":"Chris Reudenbach","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/getSpatialClass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks if x is of type raster,terra,sf or sp — getSpatialClass","text":"","code":"if (FALSE) { # add path getSpatialClass(x) }"},{"path":"https://r-spatial.github.io/link2GI/reference/gvec2sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts from an existing `GRASS` environment an arbitrary vector dataset into a sf object — gvec2sf","title":"Converts from an existing `GRASS` environment an arbitrary vector dataset into a sf object — gvec2sf","text":"Converts existing `GRASS` environment arbitrary vector dataset   sf object","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/gvec2sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts from an existing `GRASS` environment an arbitrary vector dataset into a sf object — gvec2sf","text":"","code":"gvec2sf(x, obj_name, gisdbase, location, gisdbase_exist = TRUE)"},{"path":"https://r-spatial.github.io/link2GI/reference/gvec2sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts from an existing `GRASS` environment an arbitrary vector dataset into a sf object — gvec2sf","text":"x sf object corresponding settings corresponding GRASS container obj_name name GRASS layer gisdbase GRASS gisDbase folder location GRASS location name containing obj_name gisdbase_exist logical switch GRASS gisdbase folder exist default TRUE","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/gvec2sf.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Converts from an existing `GRASS` environment an arbitrary vector dataset into a sf object — gvec2sf","text":"look sf capabilities read direct sqlite","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/gvec2sf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Converts from an existing `GRASS` environment an arbitrary vector dataset into a sf object — gvec2sf","text":"Chris Reudenbach","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/gvec2sf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts from an existing `GRASS` environment an arbitrary vector dataset into a sf object — gvec2sf","text":"","code":"run = FALSE if (run) { ## example  require(sf) require(sp) require(link2GI) data(meuse) meuse_sf = st_as_sf(meuse,                      coords = c('x', 'y'),                      crs = 28992,                      agr = 'constant')   # write data to GRASS and create gisdbase sf2gvec(x = meuse_sf,         obj_name = 'meuse_R-G',         gisdbase = '~/temp3/',         location = 'project1')  # read from existing GRASS           gvec2sf(x = meuse_sf,         obj_name = 'meuse_r_g',         gisdbase = '~/temp3',                location = 'project1')  }"},{"path":"https://r-spatial.github.io/link2GI/reference/initProj.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple creation and reproduction of an efficient project environment — initProj","title":"Simple creation and reproduction of an efficient project environment — initProj","text":"Set project environment defined folder structure, RStudio project, initial scripts configuration files optionally Git Renv support.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/initProj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple creation and reproduction of an efficient project environment — initProj","text":"","code":"initProj(   root_folder = \".\",   folders = NULL,   init_git = NULL,   init_renv = NULL,   code_subfolder = c(\"src\", \"src/functions\", \"src/configs\"),   global = FALSE,   openproject = NULL,   newsession = TRUE,   standard_setup = \"baseSpatial\",   loc_name = NULL,   ymlFN = NULL,   appendlibs = NULL,   OpenFiles = NULL )"},{"path":"https://r-spatial.github.io/link2GI/reference/initProj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple creation and reproduction of an efficient project environment — initProj","text":"root_folder root directory project. folders list sub folders within project directory created. init_git logical: init git repository project directory. init_renv logical: init renv project directory. code_subfolder sub folders scripts functions within project directory created. folders src, src/functions src/config mandatory. global logical: export path strings global variables? openproject default NULL TRUE project opened new session newsession open project new session? default FALSE standard_setup select one predefined settings c('base', 'baseSpatial', 'advancedSpatial').  case, name base folder required, individual additional  folders can specified 'folders'  name git repository must supplied function. loc_name NULL default, defines research area analysis data folder subfolder serves code tag ymlFN filename yaml file containing non standard_setup appendlibs vector  names libraries required initial project. settings required project, additional libraries, optional settings,  colour schemes, etc. Important: used control runtime parameters scripts.  file read automatically, even  located 'fcts_folder' folder. OpenFiles default NULL","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/initProj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple creation and reproduction of an efficient project environment — initProj","text":"dirs, .e. list containing project paths.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/initProj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simple creation and reproduction of an efficient project environment — initProj","text":"function uses [setupProj] setting folders. project creaeted, manage overall configuration project `src/functions/000_settings.R script`. sourced begining template scripts created default. Define additional constans, required libraries etc. 000_settings.R time. additonal folders required later, just add manually. parsed part 000_settings.R added variable called dirs allows easy acces folders. Use variable load/save data avoid hard coded links scripts except top-level root folder defined main control script located src/main.R.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/initProj.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Simple creation and reproduction of an efficient project environment — initProj","text":"yaml based setup need use one default configurations  c('base', 'baseSpatial','advancedSpatial') provide yaml file  MUST contain standard_setup arguments,  mysetup yaml root, items mandatory keywords can filled needed. Alternatively may set default_setup NULL provide arguments via command line.","code":"mysetup:   dataFolder:     docsFolder:     tmpFolder:      init_git: true/false    init_renv: true/false    code_subfolder: ['src', 'src/functions' , 'src/config']    global: true/false    libs:    create_folders: true/false   files:"},{"path":"https://r-spatial.github.io/link2GI/reference/initProj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple creation and reproduction of an efficient project environment — initProj","text":"","code":"if (FALSE) { root_folder <- tempdir() # Mandatory, variable must be in the R environment. dirs <- initProj(root_folder = root_folder, standard_setup = 'baseSpatial') }"},{"path":"https://r-spatial.github.io/link2GI/reference/linkAll.html","id":null,"dir":"Reference","previous_headings":"","what":"convenient function to establish all link2GI links — linkAll","title":"convenient function to establish all link2GI links — linkAll","text":"brute force search, find linkl link2GI link functions. helpfull yor system well setup standard linkage procedure provide correct linkages.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/linkAll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convenient function to establish all link2GI links — linkAll","text":"","code":"linkAll(   links = NULL,   simple = TRUE,   linkItems = c(\"saga\", \"grass\", \"otb\", \"gdal\"),   sagaArgs = \"default\",   grassArgs = \"default\",   otbArgs = \"default\",   gdalArgs = \"default\",   quiet = FALSE )"},{"path":"https://r-spatial.github.io/link2GI/reference/linkAll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convenient function to establish all link2GI links — linkAll","text":"links character. links simple logical. true  make linkItems character. list c('saga','grass','otb','gdal') sagaArgs character. full string sagaArgs grassArgs character. grassArgs full string grassArgs otbArgs character. full string otbArgs gdalArgs character. full string gdalArgs quiet supress messages default FALSE","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/linkAll.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"convenient function to establish all link2GI links — linkAll","text":"may also use full list arguments made available link2GI package, strongly recommended case use directly single linkage functions  link2GI.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/linkAll.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"convenient function to establish all link2GI links — linkAll","text":"","code":"if (FALSE) { # required packages require(link2GI)  # search, find and create the links to all supported  GI software giLinks<-linkAll()  # makes the GDAL linkage verbose giLinks<-linkAll(gdalArgs= 'quiet = TRUE')   }"},{"path":"https://r-spatial.github.io/link2GI/reference/linkGDAL.html","id":null,"dir":"Reference","previous_headings":"","what":"Locate and set up 'GDAL' API bindings — linkGDAL","title":"Locate and set up 'GDAL' API bindings — linkGDAL","text":"Locate set  'GDAL - Geospatial Data Abstraction Librar' API bindings","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/linkGDAL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Locate and set up 'GDAL' API bindings — linkGDAL","text":"","code":"linkGDAL(   bin_GDAL = NULL,   searchLocation = NULL,   ver_select = FALSE,   quiet = TRUE,   returnPaths = TRUE )"},{"path":"https://r-spatial.github.io/link2GI/reference/linkGDAL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Locate and set up 'GDAL' API bindings — linkGDAL","text":"bin_GDAL string contains path gdal binaries located searchLocation string hard drive letter default C:/ ver_select Boolean default FALSE. one 'GDAL' installation ver_select = TRUE user can select interactively preferred 'GDAL' version quiet Boolean  switch suppressing messages default TRUE returnPaths Boolean set FALSE paths selected version written  PATH variable , otherwise paths versions installed GRASS versions ae returned.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/linkGDAL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Locate and set up 'GDAL' API bindings — linkGDAL","text":"add gdal paths environment creates global variables path_GDAL","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/linkGDAL.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Locate and set up 'GDAL' API bindings — linkGDAL","text":"looks gdalinfo(.exe) file. file found bin folder assumed valid 'GDAL' binary installation. called without parameter linkGDAL() performs full search hard drive C:. finds one 'GDAL' binaries take first hit. set ver_select = TRUE interactive selection preferred version.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/linkGDAL.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Locate and set up 'GDAL' API bindings — linkGDAL","text":"may also set path manually. Using 'OSGeo4W64' https://trac.osgeo.org/osgeo4w/ installation typically C:/OSGeo4W64/bin/","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/linkGDAL.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Locate and set up 'GDAL' API bindings — linkGDAL","text":"Chris Reudenbach","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/linkGDAL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Locate and set up 'GDAL' API bindings — linkGDAL","text":"","code":"if (FALSE) { # call if you do not have any idea if and where GDAL is installed gdal<-linkGDAL() if (gdal$exist) { # call it for a default OSGeo4W installation of the GDAL print(gdal) } }"},{"path":"https://r-spatial.github.io/link2GI/reference/linkGRASS.html","id":null,"dir":"Reference","previous_headings":"","what":"Locate and set up 'GRASS' API bindings — linkGRASS","title":"Locate and set up 'GRASS' API bindings — linkGRASS","text":"Initializes session environment system paths easy access 'GRASS GIS 7.x/8.x'.  correct setup spatial  projection parameters automatically performed using either existing valid   raster, terra, sp sf object,   manually providing list containing minimum parameters needed.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/linkGRASS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Locate and set up 'GRASS' API bindings — linkGRASS","text":"","code":"linkGRASS(   x = NULL,   epsg = NULL,   default_GRASS = NULL,   search_path = NULL,   ver_select = FALSE,   gisdbase_exist = FALSE,   gisdbase = NULL,   use_home = FALSE,   location = NULL,   spatial_params = NULL,   resolution = NULL,   quiet = TRUE,   returnPaths = TRUE )"},{"path":"https://r-spatial.github.io/link2GI/reference/linkGRASS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Locate and set up 'GRASS' API bindings — linkGRASS","text":"x raster/terra sf/sp object epsg manual epsg override default_GRASS default NULL NULL automatic search installed versions performed.  provide valid list corresponding version initialized. example OSGeo4W64 : c('C:/OSGeo4W64','grass-7.0.5','osgeo4w') search_path Path mount point search . ver_select Boolean TRUE may choose interactively binary version (found  one),  default FALSE gisdbase_exist default FALSE set TRUE arguments gisdbase location expected existing GRASS gisdbase gisdbase default NULL, invoke tempdir() 'GRASS' database. Alternatively can provide individual path. use_home default FALSE, set GISRC path tempdir(), TRUE HOME USERPROFILE setting used writing GISRC file location default NULL, invoke basename(tempfile()) defining 'GRASS' location. Alternatively can provide individual path. spatial_params default NULL. Instead spatial object may provide geometry list. E.g. c(xmin,ymin,xmax,ymax,proj4_string) resolution resolution map units GRASS raster cells quiet Boolean  switch suppressing console messages default TRUE returnPaths Boolean set FALSE paths selected version written  PATH variable , otherwise paths versions installed GRASS versions ae returned.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/linkGRASS.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Locate and set up 'GRASS' API bindings — linkGRASS","text":"GRASS GIS excellently supported rgrass wrapper package. Nevertheless, 'GRASS GIS' known high demands correct spatial reference setup  environment requirements. becomes even worse 'Windows  platforms several alternative 'GRASS GIS' installations available. know use rgrass package setup function rgrass::initGRASS works fine Linux.  also true known configurations 'Windows' operating system.  However, university labs corporate machines limited privileges /different releases 'OSGeo4W' distribution  'GRASS' stand-alone installation,  different software releases (e.g. 'GRASS 7.0.5 GRASS 8.1.0), often becomes inconvenient even  get correct links.  function linkGRASS tries find valid 'GRASS GIS' binaries #' analyzing startup script files. GRASS GIS' startup script files. identifying 'GRASS GIS' binaries, #' necessary system variables settings system variables settings generated passed temporary R environment. concept simple, helpful everyday use. need either  provide raster sp sf spatial object correct spatial projection properties, can link directly existing 'GRASS' gisdbase mapset.  choose spatial object initialize correct 'GRASS' mapset, used create either temporary permanent mapset.  rgrass environment correct 'GRASS' structure. time consuming part Windows systems search process. can easily take 10 minutes .  speed process, can also provide correct parameter set. best way manually call searchGRASSW 'Linux' searchGRASSX.  call linkGRASS version arguments choice. linkGRASS initialize use GRASS. one valid installation call linkGRASS() without arguments, asked select one.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/linkGRASS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Locate and set up 'GRASS' API bindings — linkGRASS","text":"Chris Reudenbach","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/linkGRASS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Locate and set up 'GRASS' API bindings — linkGRASS","text":"","code":"run = FALSE if (run) { library(link2GI) require(sf)  # get  data                          nc = st_read(system.file('shape/nc.shp', package='sf')) # Automatic linking of GRASS binaries using the nc data object for spatial referencing # This is the best practice linking procedure for on-the-fly jobs. # NOTE: If more than one GRASS installation is found, you will have to select one.  grass = linkGRASS(nc)  # Select the GRASS installation (if more than one) linkGRASS(nc, ver_select = TRUE)  # Select the GRASS installation and define the search location linkGRASS(nc, ver_select = TRUE, search_path = '~/')  # Set up GRASS manually with spatial parameters of the nc data epsg = 28992 proj4_string <- sp::CRS(paste0('+init=epsg:',epsg))  linkGRASS(spatial_params = c(178605,329714,181390,333611,proj4_string@projargs),epsg=epsg)   # create some temporary project folders for a permanent gisdbase root_folder = tempdir() grass_path = link2GI::createFolder(root_folder = root_folder,                          folders = c('project1/')) if (grass$exist){ # CREATE and link to a permanent GRASS folder at 'root_folder', location named 'project1'  linkGRASS(nc, gisdbase = root_folder, location = 'project1')     # ONLY LINK to a permanent GRASS folder in 'root_folder', location named 'project1'  linkGRASS(gisdbase = root_folder, location = 'project1', gisdbase_exist = TRUE )     # Manual creation of a GRASS gisdbase with the spatial parameters of the NC data.  # additional use of a permanent directory 'root_folder' and the location 'nc_spatial_params'. epsg = 4267 proj4_string = sp::CRS(paste0('+init=epsg:',epsg)) linkGRASS(gisdbase = root_folder,            location = 'nc_spatial_params',            spatial_params = c(-84.32385, 33.88199,-75.45698,36.58965,proj4_string),epsg = epsg) } }"},{"path":"https://r-spatial.github.io/link2GI/reference/linkOTB.html","id":null,"dir":"Reference","previous_headings":"","what":"Locate and set up 'Orfeo ToolBox' API bindings — linkOTB","title":"Locate and set up 'Orfeo ToolBox' API bindings — linkOTB","text":"Locate set  'Orfeo ToolBox' API bindings","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/linkOTB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Locate and set up 'Orfeo ToolBox' API bindings — linkOTB","text":"","code":"linkOTB(   bin_OTB = NULL,   root_OTB = NULL,   type_OTB = NULL,   searchLocation = NULL,   ver_select = FALSE,   quiet = TRUE,   returnPaths = TRUE )"},{"path":"https://r-spatial.github.io/link2GI/reference/linkOTB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Locate and set up 'Orfeo ToolBox' API bindings — linkOTB","text":"bin_OTB string contains path otb binaries located root_OTB string provides root folder bin_OTB type_OTB string searchLocation string hard drive letter (Windows) mounting point (Linux) default Windows C:, default Linux ~ ver_select Boolean, default FALSE. one 'OTB' installation ver_select = TRUE user can interactively select preferred 'OTB' version, conversely FALSE latest version automatically selected. quiet Boolean  switch suppressing messages default TRUE returnPaths Boolean, set FALSE paths selected version written.  PATH variable , otherwise paths versions installed OTB versions returned.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/linkOTB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Locate and set up 'Orfeo ToolBox' API bindings — linkOTB","text":"add otb paths environment creates global variables path_OTB","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/linkOTB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Locate and set up 'Orfeo ToolBox' API bindings — linkOTB","text":"looks otb_cli.bat file. file found bin folder assumed valid 'OTB' binary installation. called without parameter linkOTB() performs full search hard drive C:. finds one 'OTB' binaries take first hit. set ver_select = TRUE interactive selection preferred version.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/linkOTB.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Locate and set up 'Orfeo ToolBox' API bindings — linkOTB","text":"may also set path manually. Using 'OSGeo4W64' https://trac.osgeo.org/osgeo4w/ installation typically C:/OSGeo4W64/bin/","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/linkOTB.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Locate and set up 'Orfeo ToolBox' API bindings — linkOTB","text":"Chris Reudenbach","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/linkOTB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Locate and set up 'Orfeo ToolBox' API bindings — linkOTB","text":"","code":"if (FALSE) { # call if you do not have any idea if and where OTB is installed otb<-linkOTB() if (otb$exist) { # call it for a default OSGeo4W installation of the OTB print(otb) } }"},{"path":"https://r-spatial.github.io/link2GI/reference/linkSAGA.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies SAGA GIS Installations and returns linking Informations — linkSAGA","title":"Identifies SAGA GIS Installations and returns linking Informations — linkSAGA","text":"Finds existing SAGA GIS installation(s),  generates sets necessary path system variables seamless use command  line calls 'SAGA GIS' CLI API, setup valid system variables calling default  rsaga.env makes available RSAGA wrapper functions. existing installation(s) means looks saga_cmd saga_cmd.exe  executables. file found assumed valid 'SAGA GIS' installation. called without argument recent (.e. highest) SAGA GIS version linked.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/linkSAGA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies SAGA GIS Installations and returns linking Informations — linkSAGA","text":"","code":"linkSAGA(   default_SAGA = NULL,   searchLocation = \"default\",   ver_select = FALSE,   quiet = TRUE,   returnPaths = TRUE )"},{"path":"https://r-spatial.github.io/link2GI/reference/linkSAGA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies SAGA GIS Installations and returns linking Informations — linkSAGA","text":"default_SAGA string contains path RSAGA binaries searchLocation drive letter searched, Windows systems default C:, Linux systems default /usr/bin. ver_select boolean default FALSE. one 'SAGA GIS' installation ver_select = TRUE user can select interactively preferred 'SAGA GIS' version quiet boolean  switch supressing console messages default TRUE returnPaths boolean set FALSE paths selected version written  PATH variable , otherwise paths versions installed SAGA versions ae returned.#'@details called without parameter linkSAGA() performs full search C:. finds one 'SAGA GIS' binaries take first hit. set ver_select = TRUE interactive selection preferred version. Additionally selected SAGA paths added environment global variables sagaPath, sagaModPath sagaCmd created.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/linkSAGA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies SAGA GIS Installations and returns linking Informations — linkSAGA","text":"list containing selected RSAGA path variables $sagaPath,$sagaModPath,$sagaCmd potentially installations $installed","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/linkSAGA.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Identifies SAGA GIS Installations and returns linking Informations — linkSAGA","text":"'SAGA GIS' wrapper RSAGA  package updated several times however covers currently (May 2014) 'SAGA GIS'  versions  2.3.1 LTS - 8.4.1 fast evolution 'SAGA GIS' makes highly impracticable keep wrapper adaptions line (currently 9.4). RSAGA meet linking needs perfectly  use 'SAGA GIS' versions 2.0.4 - 7.5.0.   However must call rsaga.env using rsaga.env(modules = saga$sagaModPath) assuming saga contains returnPaths linkSAGA  addition promising  Rsagacmd wrapper package providing new list oriented wrapping tool.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/linkSAGA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies SAGA GIS Installations and returns linking Informations — linkSAGA","text":"","code":"if (FALSE) {  # call if you do not have any idea if and where SAGA GIS is installed # it will return a list with the selected and available SAGA installations # it prepares the system for running the selected SAGA version via RSAGA or CLI linkSAGA()  # overriding the default environment of rsaga.env call   saga<-linkSAGA() if (saga$exist) { require(RSAGA) RSAGA::rsaga.env(path = saga$installed$binDir[1],modules = saga$installed$moduleDir[1]) } }"},{"path":"https://r-spatial.github.io/link2GI/reference/loadEnvi.html","id":null,"dir":"Reference","previous_headings":"","what":"Load data from rds format and associated yaml metadata file. — loadEnvi","title":"Load data from rds format and associated yaml metadata file. — loadEnvi","text":"Load data rds format associated yaml metadata file.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/loadEnvi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load data from rds format and associated yaml metadata file. — loadEnvi","text":"","code":"loadEnvi(file_path)"},{"path":"https://r-spatial.github.io/link2GI/reference/loadEnvi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load data from rds format and associated yaml metadata file. — loadEnvi","text":"file_path name path rds file.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/loadEnvi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load data from rds format and associated yaml metadata file. — loadEnvi","text":"list 2 containing data metadata.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/loadEnvi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load data from rds format and associated yaml metadata file. — loadEnvi","text":"","code":"if (FALSE) { a <- 1 meta <- list(a = 'a is a variable') saveEnvi(a, file.path(tempdir(), 'test.rds'), meta) b <- loadEnvi(file.path(tempdir(), 'test.rds')) }"},{"path":"https://r-spatial.github.io/link2GI/reference/loadLibraries.html","id":null,"dir":"Reference","previous_headings":"","what":"Load libraries and try to install missing ones — loadLibraries","title":"Load libraries and try to install missing ones — loadLibraries","text":"Load libaries R environment try install misssing ones.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/loadLibraries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load libraries and try to install missing ones — loadLibraries","text":"","code":"loadLibraries(libs)"},{"path":"https://r-spatial.github.io/link2GI/reference/loadLibraries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load libraries and try to install missing ones — loadLibraries","text":"libs vector  names libraries","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/loadLibraries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load libraries and try to install missing ones — loadLibraries","text":"List indicating library loaded successfully.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/loadLibraries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load libraries and try to install missing ones — loadLibraries","text":"","code":"if (FALSE) { # loadLibraries(libs = C('link2GI')) }"},{"path":"https://r-spatial.github.io/link2GI/reference/makGlobalVar.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a variable with a certain value in the R environment — makGlobalVar","title":"Generates a variable with a certain value in the R environment — makGlobalVar","text":"Generates variable certain value R environment","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/makGlobalVar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a variable with a certain value in the R environment — makGlobalVar","text":"","code":"makGlobalVar(name, value)"},{"path":"https://r-spatial.github.io/link2GI/reference/makGlobalVar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a variable with a certain value in the R environment — makGlobalVar","text":"name character string name variable value character string value variable","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/makGlobalVar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a variable with a certain value in the R environment — makGlobalVar","text":"","code":"if (FALSE) {  # creates the global var \\code{pathToData} with the value \\code{~/home/data} makGlobalVar('pathToData','~/home/data')   }"},{"path":"https://r-spatial.github.io/link2GI/reference/makeGlobalVariable.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a variable with a certain value in the R environment — makeGlobalVariable","title":"Generates a variable with a certain value in the R environment — makeGlobalVariable","text":"Generates variable certain value R environment.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/makeGlobalVariable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a variable with a certain value in the R environment — makeGlobalVariable","text":"","code":"makeGlobalVariable(names, values)"},{"path":"https://r-spatial.github.io/link2GI/reference/makeGlobalVariable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a variable with a certain value in the R environment — makeGlobalVariable","text":"names vector  names variable(s) values vector values variable(s)","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/makeGlobalVariable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a variable with a certain value in the R environment — makeGlobalVariable","text":"","code":"if (FALSE) { # creates the global variable \\code{path_data} with the value \\code{~/data} makeGlobalVariable(names = 'path_data', values = '~/data') }"},{"path":"https://r-spatial.github.io/link2GI/reference/manuallyBuild.html","id":null,"dir":"Reference","previous_headings":"","what":"Build package manually — manuallyBuild","title":"Build package manually — manuallyBuild","text":"function specifically designed build package local source  files manually, .e., without using package building functionality  offered e.g. RStudio.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/manuallyBuild.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build package manually — manuallyBuild","text":"","code":"manuallyBuild(dsn = getwd(), pkgDir = \"H:/Dokumente\", document = TRUE, ...)"},{"path":"https://r-spatial.github.io/link2GI/reference/manuallyBuild.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build package manually — manuallyBuild","text":"dsn 'character'. Target folder containing source files; defaults  current working directory. pkgDir 'character'. Target folder containing result ing package invoked build process. According Marburg University pools default set pkgDir='H:/Dokumente'. want use different setting may set pkgDir whatever want. document 'logical'. Determines whether invoke  roxygenize default roclets documentation purposes. ... arguments passed devtools build.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/manuallyBuild.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build package manually — manuallyBuild","text":"NOTE default setting focussing HRZ environment Marburg University","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/manuallyBuild.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Build package manually — manuallyBuild","text":"Florian Detsch, Chris Reudenbach","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/manuallyBuild.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build package manually — manuallyBuild","text":"","code":"if (FALSE) { ## when in a package directory, e.g. '~/link2GI'  manuallyBuild() }"},{"path":"https://r-spatial.github.io/link2GI/reference/paramGRASSw.html","id":null,"dir":"Reference","previous_headings":"","what":"Usually for internally usage get 'GRASS GIS' and rgrass parameters on 'Windows' OS — paramGRASSw","title":"Usually for internally usage get 'GRASS GIS' and rgrass parameters on 'Windows' OS — paramGRASSw","text":"Initialize enviroment variables 'Windows' OS using   'GRASS GIS' via rgrass","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/paramGRASSw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Usually for internally usage get 'GRASS GIS' and rgrass parameters on 'Windows' OS — paramGRASSw","text":"","code":"paramGRASSw(   set_default_GRASS = NULL,   DL = \"C:/\",   ver_select = FALSE,   quiet = TRUE )"},{"path":"https://r-spatial.github.io/link2GI/reference/paramGRASSw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Usually for internally usage get 'GRASS GIS' and rgrass parameters on 'Windows' OS — paramGRASSw","text":"set_default_GRASS default = NULL forces full search 'GRASS GIS' binaries. may alternatively provide vector containing paths keywords. c('C:/OSGeo4W64','grass-7.0.5','osgeo4w') valid typical osgeo4w installation. DL character search location default = C: ver_select boolean default FALSE. one 'SAGA GIS' installation ver_select = TRUE user can select interactively preferred 'SAGA GIS' version quiet boolean  switch supressing console messages default TRUE","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/paramGRASSw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Usually for internally usage get 'GRASS GIS' and rgrass parameters on 'Windows' OS — paramGRASSw","text":"concept straightforward days usage pretty  helpful. need provide terra sf object. derived properties used initialize temporary static  rgrass environment. rsession full access  GRASS via wrapper package well command line. paramGRASSw initializes usage GRASS.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/paramGRASSw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Usually for internally usage get 'GRASS GIS' and rgrass parameters on 'Windows' OS — paramGRASSw","text":"","code":"run = FALSE if (run) { # automatic retrieval of valid 'GRASS GIS' environment settings  # if more than one is found the user has to choose. paramGRASSw()  # typical OSGeo4W64 installation paramGRASSw(c('C:/OSGeo4','grass7.8','osgeo4W')) }"},{"path":"https://r-spatial.github.io/link2GI/reference/paramGRASSx.html","id":null,"dir":"Reference","previous_headings":"","what":"Usually for internally usage, get 'GRASS GIS' and rgrass parameters on 'Linux' OS — paramGRASSx","title":"Usually for internally usage, get 'GRASS GIS' and rgrass parameters on 'Linux' OS — paramGRASSx","text":"Initialize set rgrass  'Linux'","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/paramGRASSx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Usually for internally usage, get 'GRASS GIS' and rgrass parameters on 'Linux' OS — paramGRASSx","text":"","code":"paramGRASSx(   set_default_GRASS = NULL,   MP = \"/usr/bin\",   ver_select = FALSE,   quiet = TRUE )"},{"path":"https://r-spatial.github.io/link2GI/reference/paramGRASSx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Usually for internally usage, get 'GRASS GIS' and rgrass parameters on 'Linux' OS — paramGRASSx","text":"set_default_GRASS, default NULL. force search 'GRASS GIS' may provide valid combination  c('/usr/lib/grass74','7.4.1','grass74') MP, default '/usr/bin'. mount point searched. ver_select TRUE must interactively select alternative installations quiet boolean, default TRUE.  switch suppressing console messages","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/paramGRASSx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Usually for internally usage, get 'GRASS GIS' and rgrass parameters on 'Linux' OS — paramGRASSx","text":"rsession full access GRASS7 GIS via rgrass wrapper. Additionally may use also use API calls GRASS via command line.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/paramGRASSx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Usually for internally usage, get 'GRASS GIS' and rgrass parameters on 'Linux' OS — paramGRASSx","text":"","code":"run = FALSE if (run) { # automatic retrieval of the GRASS environment settings paramGRASSx()   # typical stand_alone installation paramGRASSx('/usr/bin/grass72')  # typical user defined installation (compiled sources) paramGRASSx('/usr/local/bin/grass72') }"},{"path":"https://r-spatial.github.io/link2GI/reference/parseOTBAlgorithms.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve available OTB modules — parseOTBAlgorithms","title":"Retrieve available OTB modules — parseOTBAlgorithms","text":"Read selected OTB module folder create list available functions.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/parseOTBAlgorithms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve available OTB modules — parseOTBAlgorithms","text":"","code":"parseOTBAlgorithms(gili = NULL)"},{"path":"https://r-spatial.github.io/link2GI/reference/parseOTBAlgorithms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve available OTB modules — parseOTBAlgorithms","text":"gili optional list available `OTB` installations, specified,  `linkOTB()` called automatically try find valid OTB installation","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/parseOTBAlgorithms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve available OTB modules — parseOTBAlgorithms","text":"","code":"if (FALSE) { ## link to the OTB binaries otblink<-link2GI::linkOTB()   if (otblink$exist) {   ## parse all modules  moduleList<-parseOTBAlgorithms(gili = otblink)   ## print the list  print(moduleList)    }  }"},{"path":"https://r-spatial.github.io/link2GI/reference/parseOTBFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the argument list from a selected OTB function — parseOTBFunction","title":"Retrieve the argument list from a selected OTB function — parseOTBFunction","text":"retrieve selected function returns full argument list default settings","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/parseOTBFunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the argument list from a selected OTB function — parseOTBFunction","text":"","code":"parseOTBFunction(algo = NULL, gili = NULL)"},{"path":"https://r-spatial.github.io/link2GI/reference/parseOTBFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the argument list from a selected OTB function — parseOTBFunction","text":"algo either number plain name `OTB` algorithm wanted. Note correct (current/selected version) information provided `parseOTBAlgorithms()` gili optional list available `OTB` installations, specified,  `linkOTB()` called automatically try find valid OTB installation","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/parseOTBFunction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the argument list from a selected OTB function — parseOTBFunction","text":"","code":"if (FALSE) { otblink<-link2GI::linkOTB() if (otblink$exist) {  ## parse all modules algos<-parseOTBAlgorithms(gili = otblink)   ## take edge detection cmdList<-parseOTBFunction(algo = algos[27],gili = otblink) ## print the current command print(cmdList) } } ##+##"},{"path":"https://r-spatial.github.io/link2GI/reference/runOTB.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute the OTB command via system call — runOTB","title":"Execute the OTB command via system call — runOTB","text":"Wrapper function inserts OTB command list system call compatible string executes command.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/runOTB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute the OTB command via system call — runOTB","text":"","code":"runOTB(   otbCmdList = NULL,   gili = NULL,   retRaster = TRUE,   retCommand = FALSE,   quiet = TRUE )"},{"path":"https://r-spatial.github.io/link2GI/reference/runOTB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute the OTB command via system call — runOTB","text":"otbCmdList correctly populated OTB algorithm parameter list gili optional list available `OTB` installations, specified,  `linkOTB()` called automatically try find valid OTB installation retRaster boolean TRUE raster stack returned default FALSE retCommand boolean TRUE OTB API command returned default FALSE quiet boolean  TRUE suppressing messages default TRUE","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/runOTB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Execute the OTB command via system call — runOTB","text":"#' Please NOTE: must check help identify correct input file argument ($input_in $input_il).","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/runOTB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute the OTB command via system call — runOTB","text":"","code":"if (FALSE) { require(link2GI) require(terra) require(listviewer)  ## link to OTB otblink<-link2GI::linkOTB()  if (otblink$exist) {  root_folder<-tempdir()  fn <- system.file('ex/elev.tif', package = 'terra')  ## for an image output example we use the Statistic Extraction,  algoKeyword<- 'LocalStatisticExtraction'  ## extract the command list for the choosen algorithm  cmd<-parseOTBFunction(algo = algoKeyword, gili = otblink)  ## Please NOTE: ## You must check the help to identify the correct argument codewort ($input_in or $input_il) listviewer::jsonedit(cmd$help)  ## define the mandatory arguments all other will be default cmd$input_in  <- fn cmd$out <- file.path(tempdir(),'test_otb_stat.tif') cmd$radius <- 7  ## run algorithm retStack<-runOTB(cmd,gili = otblink)  ## plot image terra::plot(retStack)  ## for a data output example we use the   algoKeyword<- 'ComputeImagesStatistics'  ## extract the command list for the chosen algorithm  cmd<-parseOTBFunction(algo = algoKeyword, gili = otblink)  ## get help using the convenient listviewer listviewer::jsonedit(cmd$help)  ## define the mandatory arguments all other will be default cmd$input_il  <- file.path(tempdir(),'test.tif') cmd$ram <- 4096 cmd$out.xml <- file.path(tempdir(),'test_otb_stat.xml') cmd$progress <- 1  ## run algorithm ret <- runOTB(cmd,gili = otblink, quiet = F)  ## as vector print(ret)  ## as xml XML::xmlParse(cmd$out)   } }"},{"path":"https://r-spatial.github.io/link2GI/reference/saveEnvi.html","id":null,"dir":"Reference","previous_headings":"","what":"Saves data in rds format and adds a yaml metadata file. — saveEnvi","title":"Saves data in rds format and adds a yaml metadata file. — saveEnvi","text":"Saves data rds format saves metadata corresponding yaml file.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/saveEnvi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Saves data in rds format and adds a yaml metadata file. — saveEnvi","text":"","code":"saveEnvi(variable, file_path, meta)"},{"path":"https://r-spatial.github.io/link2GI/reference/saveEnvi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Saves data in rds format and adds a yaml metadata file. — saveEnvi","text":"variable name data variable saved. file_path name path rds file. meta name metadata list.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/saveEnvi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Saves data in rds format and adds a yaml metadata file. — saveEnvi","text":"","code":"if (FALSE) { a <- 1 meta <- list(a = 'a is a variable') saveEnvi(a, file.path(tempdir(), 'test.rds'), meta) }"},{"path":"https://r-spatial.github.io/link2GI/reference/searchGDALW.html","id":null,"dir":"Reference","previous_headings":"","what":"Search recursively for valid 'GDAL' installation(s) on a 'Windows' OS — searchGDALW","title":"Search recursively for valid 'GDAL' installation(s) on a 'Windows' OS — searchGDALW","text":"Search valid 'GDAL' installations 'Windows' OS","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchGDALW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search recursively for valid 'GDAL' installation(s) on a 'Windows' OS — searchGDALW","text":"","code":"searchGDALW(DL = \"C:/\", quiet = TRUE)"},{"path":"https://r-spatial.github.io/link2GI/reference/searchGDALW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search recursively for valid 'GDAL' installation(s) on a 'Windows' OS — searchGDALW","text":"DL drive letter default 'C:/' quiet boolean  switch supressing console messages default TRUE","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchGDALW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search recursively for valid 'GDAL' installation(s) on a 'Windows' OS — searchGDALW","text":"dataframe 'GDAL' root folder(s) version name(s) installation type(s).","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchGDALW.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Search recursively for valid 'GDAL' installation(s) on a 'Windows' OS — searchGDALW","text":"Chris Reudenbach","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchGDALW.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search recursively for valid 'GDAL' installation(s) on a 'Windows' OS — searchGDALW","text":"","code":"run = FALSE if (run) { # get all valid GDAL installation folders and params searchGDALW() }"},{"path":"https://r-spatial.github.io/link2GI/reference/searchGDALX.html","id":null,"dir":"Reference","previous_headings":"","what":"Search recursively for valid 'GDAL' installation(s) on a 'X-based' OS — searchGDALX","title":"Search recursively for valid 'GDAL' installation(s) on a 'X-based' OS — searchGDALX","text":"Search valid 'GDAL' installations 'X-based' OS","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchGDALX.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search recursively for valid 'GDAL' installation(s) on a 'X-based' OS — searchGDALX","text":"","code":"searchGDALX(MP = \"/usr/bin\", quiet = TRUE)"},{"path":"https://r-spatial.github.io/link2GI/reference/searchGDALX.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search recursively for valid 'GDAL' installation(s) on a 'X-based' OS — searchGDALX","text":"MP drive letter default '/usr/bin' quiet boolean  switch supressing messages default TRUE","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchGDALX.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search recursively for valid 'GDAL' installation(s) on a 'X-based' OS — searchGDALX","text":"dataframe 'GDAL' root folder(s) version name(s) installation type(s).","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchGDALX.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Search recursively for valid 'GDAL' installation(s) on a 'X-based' OS — searchGDALX","text":"Chris Reudenbach","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchGDALX.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search recursively for valid 'GDAL' installation(s) on a 'X-based' OS — searchGDALX","text":"","code":"run = FALSE if (run) { # get all valid GDAL installation folders and params searchGDALX() }"},{"path":"https://r-spatial.github.io/link2GI/reference/searchGRASSW.html","id":null,"dir":"Reference","previous_headings":"","what":"Search recursivly valid 'GRASS GIS' installation(s) on a given 'Windows' drive — searchGRASSW","title":"Search recursivly valid 'GRASS GIS' installation(s) on a given 'Windows' drive — searchGRASSW","text":"Provides  list valid 'GRASS GIS' installation(s) 'Windows' system. major difference osgeo4W stand_alone installations. functions trys find valid installations analysing calling batch scripts.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchGRASSW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search recursivly valid 'GRASS GIS' installation(s) on a given 'Windows' drive — searchGRASSW","text":"","code":"searchGRASSW(DL = \"C:/\", quiet = TRUE)"},{"path":"https://r-spatial.github.io/link2GI/reference/searchGRASSW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search recursivly valid 'GRASS GIS' installation(s) on a given 'Windows' drive — searchGRASSW","text":"DL drive letter searched, default C:/ quiet boolean  switch supressing console messages default TRUEs","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchGRASSW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search recursivly valid 'GRASS GIS' installation(s) on a given 'Windows' drive — searchGRASSW","text":"dataframe 'GRASS GIS' root folder(s), version name(s) installation type code(s)","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchGRASSW.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Search recursivly valid 'GRASS GIS' installation(s) on a given 'Windows' drive — searchGRASSW","text":"Chris Reudenbach","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchGRASSW.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search recursivly valid 'GRASS GIS' installation(s) on a given 'Windows' drive — searchGRASSW","text":"","code":"if (FALSE) { # get all valid 'GRASS GIS' installation folders and params at 'C:/' searchGRASSW() }"},{"path":"https://r-spatial.github.io/link2GI/reference/searchGRASSX.html","id":null,"dir":"Reference","previous_headings":"","what":"Return attributes of valid 'GRASS GIS' installation(s) in 'Linux' — searchGRASSX","title":"Return attributes of valid 'GRASS GIS' installation(s) in 'Linux' — searchGRASSX","text":"Searches recursively valid 'GRASS GIS' installations given 'Linux' mount point. Returns attributes installation.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchGRASSX.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return attributes of valid 'GRASS GIS' installation(s) in 'Linux' — searchGRASSX","text":"","code":"searchGRASSX(MP = \"/usr/bin\", quiet = TRUE)"},{"path":"https://r-spatial.github.io/link2GI/reference/searchGRASSX.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return attributes of valid 'GRASS GIS' installation(s) in 'Linux' — searchGRASSX","text":"MP default /usr. directory grass executable file searched, .e. one executable GRASS installation system. quiet boolean.  switch suppressing console messages default TRUE","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchGRASSX.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return attributes of valid 'GRASS GIS' installation(s) in 'Linux' — searchGRASSX","text":"data frame containing 'GRASS GIS' binary folder(s) (.e. individual GRASS commands installed), version name(s) installation type code(s)","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchGRASSX.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return attributes of valid 'GRASS GIS' installation(s) in 'Linux' — searchGRASSX","text":"Chris Reudenbach","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchGRASSX.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return attributes of valid 'GRASS GIS' installation(s) in 'Linux' — searchGRASSX","text":"","code":"if (FALSE) { # get all valid 'GRASS GIS' installation folders in the /usr/bin directory (typical location) searchGRASSX('/usr/bin')  # get all valid 'GRASS GIS' installation folders in the home directory searchGRASSX('~/') }"},{"path":"https://r-spatial.github.io/link2GI/reference/searchOTBW.html","id":null,"dir":"Reference","previous_headings":"","what":"Search recursively for valid 'OTB' installation(s) on a 'Windows' OS — searchOTBW","title":"Search recursively for valid 'OTB' installation(s) on a 'Windows' OS — searchOTBW","text":"Search valid 'OTB' installations 'Windows' OS","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchOTBW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search recursively for valid 'OTB' installation(s) on a 'Windows' OS — searchOTBW","text":"","code":"searchOTBW(DL = \"default\", quiet = TRUE)"},{"path":"https://r-spatial.github.io/link2GI/reference/searchOTBW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search recursively for valid 'OTB' installation(s) on a 'Windows' OS — searchOTBW","text":"DL drive letter default C:/ quiet boolean  switch supressing console messages default TRUE","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchOTBW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search recursively for valid 'OTB' installation(s) on a 'Windows' OS — searchOTBW","text":"dataframe 'OTB' root folder(s) version name(s) installation type(s).","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchOTBW.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Search recursively for valid 'OTB' installation(s) on a 'Windows' OS — searchOTBW","text":"Chris Reudenbach","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchOTBW.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search recursively for valid 'OTB' installation(s) on a 'Windows' OS — searchOTBW","text":"","code":"if (FALSE) { # get all valid OTB installation folders and params searchOTBW() }"},{"path":"https://r-spatial.github.io/link2GI/reference/searchOTBX.html","id":null,"dir":"Reference","previous_headings":"","what":"Search recursively for valid 'OTB' installation(s) on a 'Linux' OS — searchOTBX","title":"Search recursively for valid 'OTB' installation(s) on a 'Linux' OS — searchOTBX","text":"Search valid 'OTB' installations 'Linux' OS","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchOTBX.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search recursively for valid 'OTB' installation(s) on a 'Linux' OS — searchOTBX","text":"","code":"searchOTBX(MP = \"default\", quiet = TRUE)"},{"path":"https://r-spatial.github.io/link2GI/reference/searchOTBX.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search recursively for valid 'OTB' installation(s) on a 'Linux' OS — searchOTBX","text":"MP default mount point home directory '~' (suggested OTB team) quiet boolean  switch supressing messages default TRUE","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchOTBX.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search recursively for valid 'OTB' installation(s) on a 'Linux' OS — searchOTBX","text":"dataframe 'OTB' root folder(s) version name(s) installation type(s).","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchOTBX.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Search recursively for valid 'OTB' installation(s) on a 'Linux' OS — searchOTBX","text":"Chris Reudenbach","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchOTBX.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search recursively for valid 'OTB' installation(s) on a 'Linux' OS — searchOTBX","text":"","code":"if (FALSE) { # get all valid OTB installation folders and params searchOTBX() }"},{"path":"https://r-spatial.github.io/link2GI/reference/searchSAGAW.html","id":null,"dir":"Reference","previous_headings":"","what":"Searches recursively for existing 'Windows' 'SAGA GIS' installation(s) — searchSAGAW","title":"Searches recursively for existing 'Windows' 'SAGA GIS' installation(s) — searchSAGAW","text":"Searches recursively existing 'SAGA GIS' installation(s) given 'Windows' drive","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchSAGAW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Searches recursively for existing 'Windows' 'SAGA GIS' installation(s) — searchSAGAW","text":"","code":"searchSAGAW(DL = \"C:/\", quiet = TRUE)"},{"path":"https://r-spatial.github.io/link2GI/reference/searchSAGAW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Searches recursively for existing 'Windows' 'SAGA GIS' installation(s) — searchSAGAW","text":"DL drive letter default C:/ quiet boolean  switch suppressing messages default TRUE","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchSAGAW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Searches recursively for existing 'Windows' 'SAGA GIS' installation(s) — searchSAGAW","text":"data frame containing 'SAGA GIS' root folder(s), version name(s) installation type(s)","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchSAGAW.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Searches recursively for existing 'Windows' 'SAGA GIS' installation(s) — searchSAGAW","text":"Chris Reudenbach","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchSAGAW.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Searches recursively for existing 'Windows' 'SAGA GIS' installation(s) — searchSAGAW","text":"","code":"if (FALSE) { #### Examples how to use searchSAGAW   # get all valid SAGA installation folders and params searchSAGAW() }"},{"path":"https://r-spatial.github.io/link2GI/reference/searchSAGAX.html","id":null,"dir":"Reference","previous_headings":"","what":"Searches recursively for existing 'Windows' 'SAGA GIS' installation(s) — searchSAGAX","title":"Searches recursively for existing 'Windows' 'SAGA GIS' installation(s) — searchSAGAX","text":"Search valid 'GRASS GIS' installations given 'Linux' mount point","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchSAGAX.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Searches recursively for existing 'Windows' 'SAGA GIS' installation(s) — searchSAGAX","text":"","code":"searchSAGAX(MP = \"/usr/bin\", quiet = TRUE)"},{"path":"https://r-spatial.github.io/link2GI/reference/searchSAGAX.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Searches recursively for existing 'Windows' 'SAGA GIS' installation(s) — searchSAGAX","text":"MP default mount point /usr/bin quiet Boolean  switch suppressing console messages default TRUE","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchSAGAX.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Searches recursively for existing 'Windows' 'SAGA GIS' installation(s) — searchSAGAX","text":"data frame containing 'SAGA GIS' root folder(s), version name(s) installation type(s)","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchSAGAX.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Searches recursively for existing 'Windows' 'SAGA GIS' installation(s) — searchSAGAX","text":"Chris Reudenbach","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/searchSAGAX.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Searches recursively for existing 'Windows' 'SAGA GIS' installation(s) — searchSAGAX","text":"","code":"if (FALSE) { #### Examples how to use searchSAGAX  # get all valid SAGA installation folders and params searchSAGAX() }"},{"path":"https://r-spatial.github.io/link2GI/reference/setenvGDAL.html","id":null,"dir":"Reference","previous_headings":"","what":"Usually for internally usage, initializes and set up access to the 'GDAL' command line interface — setenvGDAL","title":"Usually for internally usage, initializes and set up access to the 'GDAL' command line interface — setenvGDAL","text":"Initializes set  access 'GDAL' command line interface","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/setenvGDAL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Usually for internally usage, initializes and set up access to the 'GDAL' command line interface — setenvGDAL","text":"","code":"setenvGDAL(bin_GDAL = NULL)"},{"path":"https://r-spatial.github.io/link2GI/reference/setenvGDAL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Usually for internally usage, initializes and set up access to the 'GDAL' command line interface — setenvGDAL","text":"bin_GDAL string contains path 'GDAL' binaries","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/setenvGDAL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Usually for internally usage, initializes and set up access to the 'GDAL' command line interface — setenvGDAL","text":"Adds 'GDAL' paths environment creates variable global string variable gdalCmd, contains path 'GDAL' binaries.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/setenvGDAL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Usually for internally usage, initializes and set up access to the 'GDAL' command line interface — setenvGDAL","text":"","code":"run = FALSE if (run) { ## example for the most common default OSGeo4W64 installation of GDAL setenvGDAL(bin_GDAL = 'C:/OSGeo4W64/bin/',           root_GDAL = 'C:/OSGeo4W64') }"},{"path":"https://r-spatial.github.io/link2GI/reference/setenvGRASSw.html","id":null,"dir":"Reference","previous_headings":"","what":"Usually for internally usage, create valid 'GRASS GIS 7.xx' rsession environment settings according to the selected GRASS GIS 7.x and Windows Version — setenvGRASSw","title":"Usually for internally usage, create valid 'GRASS GIS 7.xx' rsession environment settings according to the selected GRASS GIS 7.x and Windows Version — setenvGRASSw","text":"Initializes set  access 'GRASS GIS 7.xx' via rgrass wrapper command line packages. Set returns necessary environment variables additionally returns GISBASE directory string.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/setenvGRASSw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Usually for internally usage, create valid 'GRASS GIS 7.xx' rsession environment settings according to the selected GRASS GIS 7.x and Windows Version — setenvGRASSw","text":"","code":"setenvGRASSw(   root_GRASS = NULL,   grass_version = NULL,   installation_type = NULL,   jpgmem = 1e+06,   quiet = TRUE )"},{"path":"https://r-spatial.github.io/link2GI/reference/setenvGRASSw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Usually for internally usage, create valid 'GRASS GIS 7.xx' rsession environment settings according to the selected GRASS GIS 7.x and Windows Version — setenvGRASSw","text":"root_GRASS grass root directory .e. 'C:\\OSGEO4~1', grass_version grass version name .e. 'grass-7.0.5' installation_type two options 'osgeo4w' installed 'OSGeo4W'-installer 'NSIS' typical stand_alone installation 'GRASS GIS'. jpgmem jpeg2000 memory allocation size. Default 1000000 quiet boolean  switch suppressing console messages default TRUE","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/setenvGRASSw.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Usually for internally usage, create valid 'GRASS GIS 7.xx' rsession environment settings according to the selected GRASS GIS 7.x and Windows Version — setenvGRASSw","text":"Chris Reudenbach","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/setenvGRASSw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Usually for internally usage, create valid 'GRASS GIS 7.xx' rsession environment settings according to the selected GRASS GIS 7.x and Windows Version — setenvGRASSw","text":"","code":"if (FALSE) { # set selected 'GRASS GIS' installation folders  setenvGRASSw(root_GRASS = 'C:\\\\PROGRA~1\\\\QGIS2~1.18',              grass_version =  'grass-7.2.1',              installation_type =  'osgeo4W') }"},{"path":"https://r-spatial.github.io/link2GI/reference/setenvOTB.html","id":null,"dir":"Reference","previous_headings":"","what":"Usually for internally usage, initializes and set up access to the 'OTB' command line interface — setenvOTB","title":"Usually for internally usage, initializes and set up access to the 'OTB' command line interface — setenvOTB","text":"Initializes set  access 'OTB' command line interface","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/setenvOTB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Usually for internally usage, initializes and set up access to the 'OTB' command line interface — setenvOTB","text":"","code":"setenvOTB(bin_OTB = NULL, root_OTB = NULL)"},{"path":"https://r-spatial.github.io/link2GI/reference/setenvOTB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Usually for internally usage, initializes and set up access to the 'OTB' command line interface — setenvOTB","text":"bin_OTB string contains path 'OTB' binaries root_OTB string contains full string root folder containing 'OTB' installation'","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/setenvOTB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Usually for internally usage, initializes and set up access to the 'OTB' command line interface — setenvOTB","text":"Adds 'OTB' paths environment creates variable global string variable otbCmd, contains path 'OTB' binaries.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/setenvOTB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Usually for internally usage, initializes and set up access to the 'OTB' command line interface — setenvOTB","text":"","code":"if (FALSE) { ## example for the most common default OSGeo4W64 installation of OTB setenvOTB(bin_OTB = 'C:\\\\OSGeo4W64\\\\bin\\\\',           root_OTB = 'C:\\\\OSGeo4W64') }"},{"path":"https://r-spatial.github.io/link2GI/reference/setupProj.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup project folder structure — setupProj","title":"Setup project folder structure — setupProj","text":"Defines folder structures creates necessary, loads libraries, sets project relevant parameters.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/setupProj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup project folder structure — setupProj","text":"","code":"setupProj(   root_folder = tempdir(),   folders = c(\"data\", \"data/tmp\"),   code_subfolder = NULL,   global = FALSE,   libs = NULL,   setup_script = \"000_setup.R\",   fcts_folder = NULL,   source_functions = !is.null(fcts_folder),   standard_setup = NULL,   create_folders = TRUE )"},{"path":"https://r-spatial.github.io/link2GI/reference/setupProj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup project folder structure — setupProj","text":"root_folder root directory project. folders list sub folders within project directory. code_subfolder sub folders scripts functions within  project directory created. folders src, src/functions src/config recommended. global logical: export path strings global variables? libs vector  names libraries setup_script Name installation script contains  settings required project, additional libraries, optional settings,  colour schemes, etc. Important: used control runtime parameters scripts.  file read automatically, even  located 'fcts_folder' folder. fcts_folder path folder holding functions. files folder sourced project start. source_functions logical: functions sourced? Default TRUE fcts_folder exists. standard_setup select one predefined settings c('base', 'baseSpatial', 'advancedSpatial').  case, name base folder required, individual additional  folders can specified 'folders'  name git repository must supplied function. create_folders default TRUE  create folders existing already.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/setupProj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup project folder structure — setupProj","text":"list containing project settings.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/setupProj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Setup project folder structure — setupProj","text":"","code":"if (FALSE) { setupProj(   root_folder = '~/edu', folders = c('data/', 'data/tmp/'),   libs = c('link2GI') ) }"},{"path":"https://r-spatial.github.io/link2GI/reference/setup_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Define working environment default settings — setup_default","title":"Define working environment default settings — setup_default","text":"Define working environment default settings","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/setup_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define working environment default settings — setup_default","text":"","code":"setup_default(   default = NULL,   new_folder_list = NULL,   new_folder_list_name = NULL )"},{"path":"https://r-spatial.github.io/link2GI/reference/setup_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define working environment default settings — setup_default","text":"default name default list new_folder_list containing list arbitrary folders generated new_folder_list_name name list","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/setup_default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define working environment default settings — setup_default","text":"list containing default project settings","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/setup_default.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define working environment default settings — setup_default","text":"adding new project settings run [setup_default()] update savew default settings. compatibility reasons may also run [lutUpdate()].","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/setup_default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define working environment default settings — setup_default","text":"","code":"if (FALSE) { # Standard setup for baseSpatial setup_default() }"},{"path":"https://r-spatial.github.io/link2GI/reference/sf2gvec.html","id":null,"dir":"Reference","previous_headings":"","what":"Write sf object directly to `GRASS` vector utilising an existing or creating a new GRASS environment — sf2gvec","title":"Write sf object directly to `GRASS` vector utilising an existing or creating a new GRASS environment — sf2gvec","text":"Write sf object directly `GRASS` vector utilising existing creating new GRASS environment","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/sf2gvec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write sf object directly to `GRASS` vector utilising an existing or creating a new GRASS environment — sf2gvec","text":"","code":"sf2gvec(x, epsg, obj_name, gisdbase, location, gisdbase_exist = FALSE)"},{"path":"https://r-spatial.github.io/link2GI/reference/sf2gvec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write sf object directly to `GRASS` vector utilising an existing or creating a new GRASS environment — sf2gvec","text":"x sf object corresponding settings corresponding GRASS container epsg numeric epsg code obj_name name GRASS layer gisdbase GRASS gisDbase folder location GRASS location name containing obj_name) gisdbase_exist logical switch GRASS gisdbase folder exist default TRUE","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/sf2gvec.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Write sf object directly to `GRASS` vector utilising an existing or creating a new GRASS environment — sf2gvec","text":"look sf capabilities write direct sqlite","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/sf2gvec.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Write sf object directly to `GRASS` vector utilising an existing or creating a new GRASS environment — sf2gvec","text":"Chris Reudenbach","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/sf2gvec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write sf object directly to `GRASS` vector utilising an existing or creating a new GRASS environment — sf2gvec","text":"","code":"run = FALSE if (run) { ## example  require(sf) require(sp) require(link2GI) data(meuse) meuse_sf = st_as_sf(meuse,                      coords = c('x', 'y'),                      crs = 28992,                      agr = 'constant')   # write data to GRASS and create gisdbase sf2gvec(x = meuse_sf,         obj_name = 'meuse_R-G',         gisdbase = '~/temp3/',         location = 'project1')  # read from existing GRASS           gvec2sf(x = meuse_sf,         obj_name = 'meuse_r_g',         gisdbase = '~/temp3',                location = 'project1')  }"},{"path":"https://r-spatial.github.io/link2GI/reference/sourceFunctions.html","id":null,"dir":"Reference","previous_headings":"","what":"Source functions from standard or given directory — sourceFunctions","title":"Source functions from standard or given directory — sourceFunctions","text":"Source functions R environment located specified folder.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/sourceFunctions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Source functions from standard or given directory — sourceFunctions","text":"","code":"sourceFunctions(fcts_folder, setup_script)"},{"path":"https://r-spatial.github.io/link2GI/reference/sourceFunctions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Source functions from standard or given directory — sourceFunctions","text":"fcts_folder path folder holding functions. files folder sourced project start.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/sourceFunctions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Source functions from standard or given directory — sourceFunctions","text":"Information sourcing successfull based try function.","code":""},{"path":"https://r-spatial.github.io/link2GI/reference/sourceFunctions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Source functions from standard or given directory — sourceFunctions","text":"","code":"if (FALSE) { # sourceFunctions(fcts_folder = '~/project/src/fcts') }"},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-06-2","dir":"Changelog","previous_headings":"","what":"link2GI 0.6-2","title":"link2GI 0.6-2","text":"bugfixes: fix cran issues git2r","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-06-1","dir":"Changelog","previous_headings":"","what":"link2GI 0.6-1","title":"link2GI 0.6-1","text":"CRAN release: 2024-06-01 bugfixes: fix cran issues fixing vignettes examples changes: dropping linkALL","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-06-0","dir":"Changelog","previous_headings":"","what":"link2GI 0.6-0","title":"link2GI 0.6-0","text":"bugfixes: issue #65 changes: variable rootDir deprecated now root_folder new feature: extension initProj lightweight project setup tool","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-05-4","dir":"Changelog","previous_headings":"","what":"link2GI 0.5-4","title":"link2GI 0.5-4","text":"bugfixes: #61 #62 #63","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-05-3","dir":"Changelog","previous_headings":"","what":"link2GI 0.5-3","title":"link2GI 0.5-3","text":"CRAN release: 2023-10-30 bugfixes: #59 , #58 fix rgrass7 dependencies","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-05-2","dir":"Changelog","previous_headings":"","what":"link2GI 0.5-2","title":"link2GI 0.5-2","text":"CRAN release: 2023-01-27 new feature: add return vector data OTB calls bugfixes: #58 minor fixes runOTB prelim fix #57 fix #56 minor fixes new feature: integration stars terra raster objects linking GRASS update documentation","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-05-1","dir":"Changelog","previous_headings":"","what":"link2GI 0.5-1","title":"link2GI 0.5-1","text":"bugfixes: prelim fix #57 fix #56 minor fixes new feature: integration stars terra raster objects linking GRASS update documentation","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-05-0","dir":"Changelog","previous_headings":"","what":"link2GI 0.5-0","title":"link2GI 0.5-0","text":"CRAN release: 2022-08-29 bugfixes: prelim fix #56 new feature: changing linkGRASS GRASS 7.x/8.x - keeping linkGRASS7for backwards compatibility","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-04-7","dir":"Changelog","previous_headings":"","what":"link2GI 0.4-7","title":"link2GI 0.4-7","text":"CRAN release: 2021-09-03 bugfixes: #52","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-04-6","dir":"Changelog","previous_headings":"","what":"link2GI 0.4-6","title":"link2GI 0.4-6","text":"bugfixes: pre fix #52","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-04-5","dir":"Changelog","previous_headings":"","what":"link2GI 0.4-5","title":"link2GI 0.4-5","text":"CRAN release: 2020-12-07 bugfixes: fix #42, #44, #46, #48, #49 new feature: add installation vignette update documentation","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-04-4","dir":"Changelog","previous_headings":"","what":"link2GI 0.4-4","title":"link2GI 0.4-4","text":"bugfixes: fix #42","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-04-3","dir":"Changelog","previous_headings":"","what":"link2GI 0.4-3","title":"link2GI 0.4-3","text":"bugfixes: fix #40","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-04-2","dir":"Changelog","previous_headings":"","what":"link2GI 0.4-2","title":"link2GI 0.4-2","text":"bugfixes: fix #38","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-04-1","dir":"Changelog","previous_headings":"","what":"link2GI 0.4-1","title":"link2GI 0.4-1","text":"new feature add linkall add direct reading writing vector data GRASS sqlite bugfixes: smaller bugfixes","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-04-0","dir":"Changelog","previous_headings":"","what":"link2GI 0.4-0","title":"link2GI 0.4-0","text":"CRAN release: 2019-11-22 new feature parse return OTB API help interactive use R add runOTB function according #29 bugfixes: #19 #21 #22 #26 #29 fixed first parsing new GRASS (since 7.8.x ) start file","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-03-7","dir":"Changelog","previous_headings":"","what":"link2GI 0.3-7","title":"link2GI 0.3-7","text":"CRAN release: 2019-09-05 new feature: improved implementation parseOTB bugfixes: several fixes examples typos","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-03-6","dir":"Changelog","previous_headings":"","what":"link2GI 0.3-6","title":"link2GI 0.3-6","text":"new feature: full re-implementation linkGDAL returns now gdal installations given search path bugfixes: several fixes Windows search linking examples typos","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-03-5","dir":"Changelog","previous_headings":"","what":"link2GI 0.3-5","title":"link2GI 0.3-5","text":"CRAN release: 2018-10-26 new feature: add manual build function UNC paths bugfixes: remove search argument PRZP several fixes Windows search linking Comments typos","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-03-4","dir":"Changelog","previous_headings":"","what":"link2GI 0.3-4","title":"link2GI 0.3-4","text":"CRAN release: 2018-10-03 new feature: add boolean variable required API exists bugfixes: fix quiet option fix search order straighten GRASS problems r..lidar several fixes Windows search linking fix add lot examples Comments typos","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-03-3","dir":"Changelog","previous_headings":"","what":"link2GI 0.3-3","title":"link2GI 0.3-3","text":"CRAN release: 2018-09-22 new feature: default latest version API selected bugfixes: OTB basic wrapper fixed Windows new examples Typos","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-03-2","dir":"Changelog","previous_headings":"","what":"link2GI 0.3-2","title":"link2GI 0.3-2","text":"CRAN release: 2018-08-23 new feature: ver_select can used directly number selection OTB basic wrapper bugfixes: RSAGA related fixes Typos","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-03-1","dir":"Changelog","previous_headings":"","what":"link2GI 0.3-1","title":"link2GI 0.3-1","text":"new feature: add returnPaths argument suppress returns bugfixes: windows RSAGA related fixes","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-03-0","dir":"Changelog","previous_headings":"","what":"link2GI 0.3-0","title":"link2GI 0.3-0","text":"CRAN release: 2018-02-11 0.3-0 version quite restructured conform common R conventions (e.g. hidden globals) make calls intuitive one-line-like. function follow slightly different naming argument setting. done keep line CLI linking functionality. new feature: Linux support multi-version selection remove global variables (re-opened #3) homogenization link calls wrap searchAPIOS functions OS-agnostic findAPI functions add robust return paths environmental variables lists add quiet option supress ! console outputs ( #4) bugfixes: remove tailing backslashes force compatibility RSAGA SAGA ver 3+","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-02-2","dir":"Changelog","previous_headings":"","what":"link2GI 0.2-2","title":"link2GI 0.2-2","text":"new feature: findGRASS function wraps searchGRASSW searchGRASSX","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-02-1","dir":"Changelog","previous_headings":"","what":"link2GI 0.2-1","title":"link2GI 0.2-1","text":"CRAN release: 2018-02-06 bugfixes: fix github s #2 #3 #5","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-02-0","dir":"Changelog","previous_headings":"","what":"link2GI 0.2-0","title":"link2GI 0.2-0","text":"CRAN release: 2018-01-28 bugfixes: fix several small bugs","code":""},{"path":"https://r-spatial.github.io/link2GI/news/index.html","id":"link2gi-01-0","dir":"Changelog","previous_headings":"","what":"link2GI 0.1-0","title":"link2GI 0.1-0","text":"CRAN release: 2017-01-22 Initial release","code":""}]
